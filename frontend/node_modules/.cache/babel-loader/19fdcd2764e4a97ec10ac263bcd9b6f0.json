{"ast":null,"code":"export const RenderDimensions = [{\n  label: 'Low (160 x 90)',\n  value: 'low',\n  resolution: {\n    width: 160,\n    height: 90\n  }\n}, {\n  label: 'CIF (352 x 288)',\n  value: 'cif',\n  resolution: {\n    width: 352,\n    height: 288\n  }\n}, {\n  label: 'VGA (640 x 480)',\n  value: 'vga',\n  resolution: {\n    width: 640,\n    height: 480\n  }\n}, {\n  label: 'WVGA (800 x 480)',\n  value: 'wvga',\n  resolution: {\n    width: 800,\n    height: 480\n  }\n}, {\n  label: 'HD 540P (960 x 540)',\n  value: '540p',\n  resolution: {\n    width: 960,\n    height: 540\n  }\n}, {\n  label: 'HD 720P (1280 x 720)',\n  value: '720p',\n  resolution: {\n    width: 1280,\n    height: 720\n  }\n}, {\n  label: 'HD 960P (1280 x 960)',\n  value: '960p',\n  resolution: {\n    width: 1280,\n    height: 960\n  }\n}, {\n  label: 'HD Standard 1080P (1440 x 1080)',\n  value: 'standard1080p',\n  resolution: {\n    width: 1440,\n    height: 1080\n  }\n}, {\n  label: 'HD Widescreen 1080P (1920 x 1080)',\n  value: 'wide1080p',\n  resolution: {\n    width: 1920,\n    height: 1080\n  }\n}, {\n  label: 'Server Default',\n  value: 'default',\n  resolution: undefined\n}];\nexport function getResolution(value) {\n  var _RenderDimensions$fin;\n\n  if (typeof value === 'undefined') {\n    return undefined;\n  }\n\n  return (_RenderDimensions$fin = RenderDimensions.find(item => item.value === value)) === null || _RenderDimensions$fin === void 0 ? void 0 : _RenderDimensions$fin.resolution;\n}","map":{"version":3,"sources":["/Users/nikitajethani/Desktop/cs-4530-covey/frontend/src/components/VideoCall/VideoFrontend/state/settings/renderDimensions.ts"],"names":["RenderDimensions","label","value","resolution","width","height","undefined","getResolution","find","item"],"mappings":"AAoBA,OAAO,MAAMA,gBAAmC,GAAG,CACjD;AACEC,EAAAA,KAAK,EAAE,gBADT;AAEEC,EAAAA,KAAK,EAAE,KAFT;AAGEC,EAAAA,UAAU,EAAE;AAAEC,IAAAA,KAAK,EAAE,GAAT;AAAcC,IAAAA,MAAM,EAAE;AAAtB;AAHd,CADiD,EAMjD;AACEJ,EAAAA,KAAK,EAAE,iBADT;AAEEC,EAAAA,KAAK,EAAE,KAFT;AAGEC,EAAAA,UAAU,EAAE;AAAEC,IAAAA,KAAK,EAAE,GAAT;AAAcC,IAAAA,MAAM,EAAE;AAAtB;AAHd,CANiD,EAWjD;AACEJ,EAAAA,KAAK,EAAE,iBADT;AAEEC,EAAAA,KAAK,EAAE,KAFT;AAGEC,EAAAA,UAAU,EAAE;AAAEC,IAAAA,KAAK,EAAE,GAAT;AAAcC,IAAAA,MAAM,EAAE;AAAtB;AAHd,CAXiD,EAgBjD;AACEJ,EAAAA,KAAK,EAAE,kBADT;AAEEC,EAAAA,KAAK,EAAE,MAFT;AAGEC,EAAAA,UAAU,EAAE;AAAEC,IAAAA,KAAK,EAAE,GAAT;AAAcC,IAAAA,MAAM,EAAE;AAAtB;AAHd,CAhBiD,EAqBjD;AACEJ,EAAAA,KAAK,EAAE,qBADT;AAEEC,EAAAA,KAAK,EAAE,MAFT;AAGEC,EAAAA,UAAU,EAAE;AAAEC,IAAAA,KAAK,EAAE,GAAT;AAAcC,IAAAA,MAAM,EAAE;AAAtB;AAHd,CArBiD,EA0BjD;AACEJ,EAAAA,KAAK,EAAE,sBADT;AAEEC,EAAAA,KAAK,EAAE,MAFT;AAGEC,EAAAA,UAAU,EAAE;AAAEC,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,MAAM,EAAE;AAAvB;AAHd,CA1BiD,EA+BjD;AACEJ,EAAAA,KAAK,EAAE,sBADT;AAEEC,EAAAA,KAAK,EAAE,MAFT;AAGEC,EAAAA,UAAU,EAAE;AAAEC,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,MAAM,EAAE;AAAvB;AAHd,CA/BiD,EAoCjD;AACEJ,EAAAA,KAAK,EAAE,iCADT;AAEEC,EAAAA,KAAK,EAAE,eAFT;AAGEC,EAAAA,UAAU,EAAE;AAAEC,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,MAAM,EAAE;AAAvB;AAHd,CApCiD,EAyCjD;AACEJ,EAAAA,KAAK,EAAE,mCADT;AAEEC,EAAAA,KAAK,EAAE,WAFT;AAGEC,EAAAA,UAAU,EAAE;AAAEC,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,MAAM,EAAE;AAAvB;AAHd,CAzCiD,EA8CjD;AACEJ,EAAAA,KAAK,EAAE,gBADT;AAEEC,EAAAA,KAAK,EAAE,SAFT;AAGEC,EAAAA,UAAU,EAAEG;AAHd,CA9CiD,CAA5C;AAqDP,OAAO,SAASC,aAAT,CAAuBL,KAAvB,EAAqD;AAAA;;AAC1D,MAAI,OAAOA,KAAP,KAAiB,WAArB,EAAkC;AAChC,WAAOI,SAAP;AACD;;AAED,kCAAON,gBAAgB,CAACQ,IAAjB,CAAuBC,IAAD,IAAUA,IAAI,CAACP,KAAL,KAAeA,KAA/C,CAAP,0DAAO,sBAAuDC,UAA9D;AACD","sourcesContent":["import { VideoTrack } from 'twilio-video';\n\nexport type RenderDimensionValue =\n  | 'low'\n  | 'cif'\n  | 'vga'\n  | 'wvga'\n  | '540p'\n  | '720p'\n  | '960p'\n  | 'standard1080p'\n  | 'wide1080p'\n  | 'default';\n\nexport interface RenderDimension {\n  label: string;\n  value: RenderDimensionValue;\n  resolution?: VideoTrack.Dimensions;\n}\n\nexport const RenderDimensions: RenderDimension[] = [\n  {\n    label: 'Low (160 x 90)',\n    value: 'low',\n    resolution: { width: 160, height: 90 },\n  },\n  {\n    label: 'CIF (352 x 288)',\n    value: 'cif',\n    resolution: { width: 352, height: 288 },\n  },\n  {\n    label: 'VGA (640 x 480)',\n    value: 'vga',\n    resolution: { width: 640, height: 480 },\n  },\n  {\n    label: 'WVGA (800 x 480)',\n    value: 'wvga',\n    resolution: { width: 800, height: 480 },\n  },\n  {\n    label: 'HD 540P (960 x 540)',\n    value: '540p',\n    resolution: { width: 960, height: 540 },\n  },\n  {\n    label: 'HD 720P (1280 x 720)',\n    value: '720p',\n    resolution: { width: 1280, height: 720 },\n  },\n  {\n    label: 'HD 960P (1280 x 960)',\n    value: '960p',\n    resolution: { width: 1280, height: 960 },\n  },\n  {\n    label: 'HD Standard 1080P (1440 x 1080)',\n    value: 'standard1080p',\n    resolution: { width: 1440, height: 1080 },\n  },\n  {\n    label: 'HD Widescreen 1080P (1920 x 1080)',\n    value: 'wide1080p',\n    resolution: { width: 1920, height: 1080 },\n  },\n  {\n    label: 'Server Default',\n    value: 'default',\n    resolution: undefined,\n  },\n];\n\nexport function getResolution(value?: RenderDimensionValue) {\n  if (typeof value === 'undefined') {\n    return undefined;\n  }\n\n  return RenderDimensions.find((item) => item.value === value)?.resolution;\n}\n"]},"metadata":{},"sourceType":"module"}