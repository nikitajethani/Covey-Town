{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport useVideoContext from '../useVideoContext/useVideoContext';\nexport default function useParticipants() {\n  _s();\n\n  const {\n    room\n  } = useVideoContext();\n  const [participants, setParticipants] = useState(Array.from(room.participants.values()).map((x, idx) => ({\n    participant: x,\n    // Slot 0 is reserved for local participant\n    slot: idx + 1\n  })));\n  useEffect(() => {\n    const participantConnected = participant => setParticipants(prevParticipants => {\n      let idx = 0;\n      const ps = prevParticipants.sort((x, y) => x.slot < y.slot ? -1 : x.slot === y.slot ? 0 : 1);\n\n      while (idx < ps.length) {\n        if (idx + 1 === ps[idx].slot) {\n          idx++;\n        } else {\n          break;\n        }\n      }\n\n      return [...prevParticipants, {\n        participant,\n        // Slot 0 is reserved for local participant\n        slot: idx + 1\n      }];\n    });\n\n    const participantDisconnected = participant => setParticipants(prevParticipants => prevParticipants.filter(p => p.participant !== participant));\n\n    room.on('participantConnected', participantConnected);\n    room.on('participantDisconnected', participantDisconnected);\n    return () => {\n      room.off('participantConnected', participantConnected);\n      room.off('participantDisconnected', participantDisconnected);\n    };\n  }, [room]);\n  return participants;\n}\n\n_s(useParticipants, \"q84BWtFwOKmR/b3bWDXsoDhxl6c=\", false, function () {\n  return [useVideoContext];\n});","map":{"version":3,"sources":["/Users/nikitajethani/Desktop/cs-4530-covey/frontend/src/components/VideoCall/VideoFrontend/hooks/useParticipants/useParticipants.tsx"],"names":["useEffect","useState","useVideoContext","useParticipants","room","participants","setParticipants","Array","from","values","map","x","idx","participant","slot","participantConnected","prevParticipants","ps","sort","y","length","participantDisconnected","filter","p","on","off"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAOC,eAAP,MAA4B,oCAA5B;AAOA,eAAe,SAASC,eAAT,GAA2B;AAAA;;AACxC,QAAM;AAAEC,IAAAA;AAAF,MAAWF,eAAe,EAAhC;AAEA,QAAM,CAACG,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAA6BM,KAAK,CAACC,IAAN,CAAWJ,IAAI,CAACC,YAAL,CAAkBI,MAAlB,EAAX,EAAuCC,GAAvC,CAA2C,CAACC,CAAD,EAAIC,GAAJ,MAAa;AACnIC,IAAAA,WAAW,EAAEF,CADsH;AAEnI;AACAG,IAAAA,IAAI,EAAEF,GAAG,GAAG;AAHuH,GAAb,CAA3C,CAA7B,CAAhD;AAMAZ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMe,oBAAoB,GAAIF,WAAD,IAAoCP,eAAe,CAAEU,gBAAD,IAAsB;AACrG,UAAIJ,GAAG,GAAG,CAAV;AACA,YAAMK,EAAE,GAAGD,gBAAgB,CAACE,IAAjB,CAAsB,CAACP,CAAD,EAAIQ,CAAJ,KAAWR,CAAC,CAACG,IAAF,GAASK,CAAC,CAACL,IAAX,GAAkB,CAAC,CAAnB,GAAuBH,CAAC,CAACG,IAAF,KAAWK,CAAC,CAACL,IAAb,GAAoB,CAApB,GAAwB,CAAhF,CAAX;;AACA,aAAOF,GAAG,GAAGK,EAAE,CAACG,MAAhB,EAAwB;AACtB,YAAIR,GAAG,GAAG,CAAN,KAAYK,EAAE,CAACL,GAAD,CAAF,CAAQE,IAAxB,EAA8B;AAC5BF,UAAAA,GAAG;AACJ,SAFD,MAEO;AACL;AACD;AACF;;AACD,aAAO,CACL,GAAGI,gBADE,EAEL;AACEH,QAAAA,WADF;AAEE;AACAC,QAAAA,IAAI,EAAEF,GAAG,GAAG;AAHd,OAFK,CAAP;AAQD,KAlB+E,CAAhF;;AAoBA,UAAMS,uBAAuB,GAAIR,WAAD,IAAoCP,eAAe,CAAEU,gBAAD,IAAsBA,gBAAgB,CAACM,MAAjB,CAAyBC,CAAD,IAAOA,CAAC,CAACV,WAAF,KAAkBA,WAAjD,CAAvB,CAAnF;;AACAT,IAAAA,IAAI,CAACoB,EAAL,CAAQ,sBAAR,EAAgCT,oBAAhC;AACAX,IAAAA,IAAI,CAACoB,EAAL,CAAQ,yBAAR,EAAmCH,uBAAnC;AACA,WAAO,MAAM;AACXjB,MAAAA,IAAI,CAACqB,GAAL,CAAS,sBAAT,EAAiCV,oBAAjC;AACAX,MAAAA,IAAI,CAACqB,GAAL,CAAS,yBAAT,EAAoCJ,uBAApC;AACD,KAHD;AAID,GA5BQ,EA4BN,CAACjB,IAAD,CA5BM,CAAT;AA8BA,SAAOC,YAAP;AACD;;GAxCuBF,e;UACLD,e","sourcesContent":["import { useEffect, useState } from 'react';\nimport { Participant, RemoteParticipant } from 'twilio-video';\nimport useVideoContext from '../useVideoContext/useVideoContext';\n\nexport type ParticipantWithSlot = {\n  participant: Participant,\n  slot: number\n};\n\nexport default function useParticipants() {\n  const { room } = useVideoContext();\n\n  const [participants, setParticipants] = useState<Array<ParticipantWithSlot>>(Array.from(room.participants.values()).map((x, idx) => ({\n    participant: x,\n    // Slot 0 is reserved for local participant\n    slot: idx + 1,\n  })));\n\n  useEffect(() => {\n    const participantConnected = (participant: RemoteParticipant) => setParticipants((prevParticipants) => {\n      let idx = 0;\n      const ps = prevParticipants.sort((x, y) => (x.slot < y.slot ? -1 : x.slot === y.slot ? 0 : 1));\n      while (idx < ps.length) {\n        if (idx + 1 === ps[idx].slot) {\n          idx++;\n        } else {\n          break;\n        }\n      }\n      return [\n        ...prevParticipants,\n        {\n          participant,\n          // Slot 0 is reserved for local participant\n          slot: idx + 1,\n        },\n      ];\n    });\n\n    const participantDisconnected = (participant: RemoteParticipant) => setParticipants((prevParticipants) => prevParticipants.filter((p) => p.participant !== participant));\n    room.on('participantConnected', participantConnected);\n    room.on('participantDisconnected', participantDisconnected);\n    return () => {\n      room.off('participantConnected', participantConnected);\n      room.off('participantDisconnected', participantDisconnected);\n    };\n  }, [room]);\n\n  return participants;\n}\n"]},"metadata":{},"sourceType":"module"}