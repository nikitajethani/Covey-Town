{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/nikitajethani/Desktop/cs 4530/covey.town-master/frontend/src/components/VideoCall/VideoFrontend/components/PreJoinScreens/MediaErrorSnackbar/MediaErrorSnackbar.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Snackbar from '../../Snackbar/Snackbar';\nimport { useHasAudioInputDevices, useHasVideoInputDevices } from '../../../hooks/deviceHooks/deviceHooks';\nimport useVideoContext from '../../../hooks/useVideoContext/useVideoContext';\nexport function getSnackbarContent(hasAudio, hasVideo, error) {\n  let headline = '';\n  let message = '';\n\n  switch (true) {\n    // This error is emitted when the user or the user's system has denied permission to use the media devices\n    case (error === null || error === void 0 ? void 0 : error.name) === 'NotAllowedError':\n      headline = 'Unable to Access Media:';\n\n      if (error.message === 'Permission denied by system') {\n        // Chrome only\n        message = 'The operating system has blocked the browser from accessing the microphone or camera. Please check your operating system settings.';\n      } else {\n        message = /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [\"Clowdr has been denied permission to use audio and video.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this), \"Learn how to enable audio and video in your browser:\", /*#__PURE__*/_jsxDEV(\"ul\", {\n            style: {\n              marginTop: '0.4em'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"https://support.google.com/chrome/answer/2693767\",\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                children: \"Google Chrome\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"https://support.mozilla.org/en-US/kb/how-manage-your-camera-and-microphone-permissions\",\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                children: \"Mozilla Firefox\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n      }\n\n      break;\n    // This error is emitted when input devices are not connected or disabled in the OS settings\n\n    case (error === null || error === void 0 ? void 0 : error.name) === 'NotFoundError':\n      headline = 'Cannot Find Microphone or Camera:';\n      message = 'The browser cannot access the microphone or camera. Please make sure all input devices are connected and enabled.';\n      break;\n    // Other getUserMedia errors are less likely to happen in this app. Here we will display\n    // the system's error message directly to the user.\n\n    case Boolean(error):\n      headline = 'Error Acquiring Media:';\n      message = `${error.name} ${error.message}`;\n      break;\n\n    case !hasAudio && !hasVideo:\n      headline = 'No Camera or Microphone Detected:';\n      message = 'Other participants in the room will be unable to see and hear you.';\n      break;\n\n    case !hasVideo:\n      headline = 'No Camera Detected:';\n      message = 'Other participants in the room will be unable to see you.';\n      break;\n\n    case !hasAudio:\n      headline = 'No Microphone Detected:';\n      message = 'Other participants in the room will be unable to hear you.';\n  }\n\n  return {\n    headline,\n    message\n  };\n}\nexport default function MediaErrorSnackbar({\n  error,\n  dismissError\n}) {\n  _s();\n\n  const hasAudio = useHasAudioInputDevices();\n  const hasVideo = useHasVideoInputDevices();\n  const {\n    isAcquiringLocalTracks\n  } = useVideoContext();\n  const isSnackbarOpen = !isAcquiringLocalTracks && (Boolean(error) || !hasAudio || !hasVideo);\n  const {\n    headline,\n    message\n  } = getSnackbarContent(hasAudio, hasVideo, error);\n  return /*#__PURE__*/_jsxDEV(Snackbar, {\n    open: isSnackbarOpen,\n    handleClose: () => {\n      if (dismissError) {\n        dismissError();\n      }\n    },\n    headline: headline,\n    message: message,\n    variant: \"warning\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MediaErrorSnackbar, \"fYgrGgTPHi8Cai2XLnwSHNdmPAg=\", false, function () {\n  return [useHasAudioInputDevices, useHasVideoInputDevices, useVideoContext];\n});\n\n_c = MediaErrorSnackbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"MediaErrorSnackbar\");","map":{"version":3,"sources":["/Users/nikitajethani/Desktop/cs 4530/covey.town-master/frontend/src/components/VideoCall/VideoFrontend/components/PreJoinScreens/MediaErrorSnackbar/MediaErrorSnackbar.tsx"],"names":["React","Snackbar","useHasAudioInputDevices","useHasVideoInputDevices","useVideoContext","getSnackbarContent","hasAudio","hasVideo","error","headline","message","name","marginTop","Boolean","MediaErrorSnackbar","dismissError","isAcquiringLocalTracks","isSnackbarOpen"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Snackbar from '../../Snackbar/Snackbar';\nimport { useHasAudioInputDevices, useHasVideoInputDevices } from '../../../hooks/deviceHooks/deviceHooks';\nimport useVideoContext from '../../../hooks/useVideoContext/useVideoContext';\n\nexport function getSnackbarContent(hasAudio: boolean, hasVideo: boolean, error?: Error) {\n  let headline = '';\n  let message: string | JSX.Element = '';\n\n  switch (true) {\n    // This error is emitted when the user or the user's system has denied permission to use the media devices\n    case error?.name === 'NotAllowedError':\n      headline = 'Unable to Access Media:';\n\n      if (error!.message === 'Permission denied by system') {\n        // Chrome only\n        message = 'The operating system has blocked the browser from accessing the microphone or camera. Please check your operating system settings.';\n      } else {\n        message = (\n          <>\n            Clowdr has been denied permission to use audio and video.\n            <br />\n            Learn how to enable audio and video in your browser:\n            <ul style={{ marginTop: '0.4em' }}>\n              <li>\n                <a\n                  href=\"https://support.google.com/chrome/answer/2693767\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Google Chrome\n                </a>\n              </li>\n              <li>\n                <a\n                  href=\"https://support.mozilla.org/en-US/kb/how-manage-your-camera-and-microphone-permissions\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Mozilla Firefox\n                </a>\n              </li>\n            </ul>\n          </>\n        );\n      }\n\n      break;\n\n      // This error is emitted when input devices are not connected or disabled in the OS settings\n    case error?.name === 'NotFoundError':\n      headline = 'Cannot Find Microphone or Camera:';\n      message = 'The browser cannot access the microphone or camera. Please make sure all input devices are connected and enabled.';\n      break;\n\n      // Other getUserMedia errors are less likely to happen in this app. Here we will display\n      // the system's error message directly to the user.\n    case Boolean(error):\n      headline = 'Error Acquiring Media:';\n      message = `${error!.name} ${error!.message}`;\n      break;\n\n    case !hasAudio && !hasVideo:\n      headline = 'No Camera or Microphone Detected:';\n      message = 'Other participants in the room will be unable to see and hear you.';\n      break;\n\n    case !hasVideo:\n      headline = 'No Camera Detected:';\n      message = 'Other participants in the room will be unable to see you.';\n      break;\n\n    case !hasAudio:\n      headline = 'No Microphone Detected:';\n      message = 'Other participants in the room will be unable to hear you.';\n  }\n\n  return {\n    headline,\n    message,\n  };\n}\n\nexport default function MediaErrorSnackbar({ error, dismissError }: { error?: Error; dismissError?(): void }) {\n  const hasAudio = useHasAudioInputDevices();\n  const hasVideo = useHasVideoInputDevices();\n\n  const { isAcquiringLocalTracks } = useVideoContext();\n\n  const isSnackbarOpen = !isAcquiringLocalTracks && (Boolean(error) || !hasAudio || !hasVideo);\n\n  const { headline, message } = getSnackbarContent(hasAudio, hasVideo, error);\n\n  return (\n    <Snackbar\n      open={isSnackbarOpen}\n      handleClose={() => {\n        if (dismissError) {\n          dismissError();\n        }\n      }}\n      headline={headline}\n      message={message}\n      variant=\"warning\"\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}