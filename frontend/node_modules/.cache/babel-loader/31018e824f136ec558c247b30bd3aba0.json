{"ast":null,"code":"import DebugLogger from '../DebugLogger';\nimport TownsServiceClient from '../TownsServiceClient';\nexport default class Video {\n  constructor(userName, coveyTownID) {\n    this.logger = new DebugLogger('Video');\n    this.initialisePromise = null;\n    this.teardownPromise = null;\n    this.sessionToken = void 0;\n    this.videoToken = null;\n    this._userName = void 0;\n    this.townsServiceClient = new TownsServiceClient();\n    this._coveyTownID = void 0;\n    this._townFriendlyName = void 0;\n    this._isPubliclyListed = void 0;\n    this._userName = userName;\n    this._coveyTownID = coveyTownID;\n  }\n\n  get isPubliclyListed() {\n    if (this._isPubliclyListed === true) {\n      return true;\n    }\n\n    return false;\n  }\n\n  get townFriendlyName() {\n    return this._townFriendlyName;\n  }\n\n  get userName() {\n    return this._userName;\n  }\n\n  get coveyTownID() {\n    return this._coveyTownID;\n  }\n\n  async setup() {\n    if (!this.initialisePromise) {\n      this.initialisePromise = new Promise((resolve, reject) => {\n        // Request our token to join the town\n        this.townsServiceClient.joinTown({\n          coveyTownID: this._coveyTownID,\n          userName: this._userName\n        }).then(result => {\n          this.sessionToken = result.coveySessionToken;\n          this.videoToken = result.providerVideoToken;\n          this._townFriendlyName = result.friendlyName;\n          this._isPubliclyListed = result.isPubliclyListed;\n          resolve(result);\n        }).catch(err => {\n          reject(err);\n        });\n      });\n    }\n\n    return this.initialisePromise;\n  }\n\n  async teardown() {\n    var _this$teardownPromise;\n\n    if (!this.teardownPromise) {\n      if (this.initialisePromise) {\n        const doTeardown = async () => {\n          this.logger.info('Tearing down video client...');\n          this.logger.info('Tore down video client.');\n          this.initialisePromise = null;\n        };\n\n        this.teardownPromise = this.initialisePromise.then(async () => {\n          await doTeardown();\n        }).catch(async err => {\n          this.logger.warn(\"Ignoring video initialisation error as we're teraing down anyway.\", err);\n          await doTeardown();\n        });\n      } else {\n        return Promise.resolve();\n      }\n    }\n\n    return (_this$teardownPromise = this.teardownPromise) !== null && _this$teardownPromise !== void 0 ? _this$teardownPromise : Promise.resolve();\n  }\n\n  static async setup(username, coveyTownID) {\n    let result = null;\n\n    if (!Video.video) {\n      Video.video = new Video(username, coveyTownID);\n    }\n\n    result = await Video.video.setup();\n\n    if (!result) {\n      Video.video = null;\n    } // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore - JB TODO\n\n\n    if (!window.clowdr) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore - JB TODO\n      window.clowdr = window.clowdr || {};\n    } // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore - JB TODO\n\n\n    window.clowdr.video = Video.video;\n    return result;\n  }\n\n  static async teardown() {\n    try {\n      var _Video$video;\n\n      await ((_Video$video = Video.video) === null || _Video$video === void 0 ? void 0 : _Video$video.teardown());\n    } finally {\n      Video.video = null; // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore - JB TODO\n\n      if (window.clowdr && window.clowdr.video) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore - JB TODO\n        window.clowdr.video = null;\n      }\n    }\n  }\n\n  static instance() {\n    return Video.video;\n  }\n\n}\nVideo.video = null;","map":{"version":3,"sources":["/Users/nikitajethani/Desktop/cs 4530/covey.town-master/frontend/src/classes/Video/Video.ts"],"names":["DebugLogger","TownsServiceClient","Video","constructor","userName","coveyTownID","logger","initialisePromise","teardownPromise","sessionToken","videoToken","_userName","townsServiceClient","_coveyTownID","_townFriendlyName","_isPubliclyListed","isPubliclyListed","townFriendlyName","setup","Promise","resolve","reject","joinTown","then","result","coveySessionToken","providerVideoToken","friendlyName","catch","err","teardown","doTeardown","info","warn","username","video","window","clowdr","instance"],"mappings":"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","sourcesContent":["import DebugLogger from '../DebugLogger';\nimport TownsServiceClient, { TownJoinResponse } from '../TownsServiceClient';\n\nexport default class Video {\n  private static video: Video | null = null;\n\n  private logger: DebugLogger = new DebugLogger('Video');\n\n  private initialisePromise: Promise<TownJoinResponse> | null = null;\n\n  private teardownPromise: Promise<void> | null = null;\n\n  private sessionToken?: string;\n\n  private videoToken: string | null = null;\n\n  private _userName: string;\n\n  private townsServiceClient: TownsServiceClient = new TownsServiceClient();\n\n  private _coveyTownID: string;\n\n  private _townFriendlyName: string | undefined;\n\n  private _isPubliclyListed: boolean | undefined;\n\n  constructor(userName: string, coveyTownID: string) {\n    this._userName = userName;\n    this._coveyTownID = coveyTownID;\n  }\n\n  get isPubliclyListed(): boolean {\n    if (this._isPubliclyListed === true) {\n      return true;\n    }\n    return false;\n  }\n\n  get townFriendlyName(): string | undefined {\n    return this._townFriendlyName;\n  }\n\n  get userName(): string {\n    return this._userName;\n  }\n\n  get coveyTownID(): string {\n    return this._coveyTownID;\n  }\n\n  private async setup(): Promise<TownJoinResponse> {\n    if (!this.initialisePromise) {\n      this.initialisePromise = new Promise((resolve, reject) => {\n        // Request our token to join the town\n        this.townsServiceClient.joinTown({\n          coveyTownID: this._coveyTownID,\n          userName: this._userName,\n        })\n          .then((result) => {\n            this.sessionToken = result.coveySessionToken;\n            this.videoToken = result.providerVideoToken;\n            this._townFriendlyName = result.friendlyName;\n            this._isPubliclyListed = result.isPubliclyListed;\n            resolve(result);\n          })\n          .catch((err) => {\n            reject(err);\n          });\n      });\n    }\n    return this.initialisePromise;\n  }\n\n  private async teardown(): Promise<void> {\n    if (!this.teardownPromise) {\n      if (this.initialisePromise) {\n        const doTeardown = async () => {\n          this.logger.info('Tearing down video client...');\n          this.logger.info('Tore down video client.');\n          this.initialisePromise = null;\n        };\n\n        this.teardownPromise = this.initialisePromise.then(async () => {\n          await doTeardown();\n        }).catch(async (err) => {\n          this.logger.warn(\"Ignoring video initialisation error as we're teraing down anyway.\", err);\n          await doTeardown();\n        });\n      } else {\n        return Promise.resolve();\n      }\n    }\n\n    return this.teardownPromise ?? Promise.resolve();\n  }\n\n  public static async setup(username: string, coveyTownID: string): Promise<TownJoinResponse> {\n    let result = null;\n\n    if (!Video.video) {\n      Video.video = new Video(username, coveyTownID);\n    }\n\n    result = await Video.video.setup();\n\n    if (!result) {\n      Video.video = null;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore - JB TODO\n    if (!window.clowdr) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore - JB TODO\n      window.clowdr = window.clowdr || {};\n    }\n\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore - JB TODO\n    window.clowdr.video = Video.video;\n\n    return result;\n  }\n\n  public static async teardown(): Promise<void> {\n    try {\n      await Video.video?.teardown();\n    } finally {\n      Video.video = null;\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore - JB TODO\n      if (window.clowdr && window.clowdr.video) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore - JB TODO\n        window.clowdr.video = null;\n      }\n    }\n  }\n\n  public static instance(): Video | null {\n    return Video.video;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}