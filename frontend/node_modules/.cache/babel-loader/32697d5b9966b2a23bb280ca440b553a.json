{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\n\n/*\n * This hook allows components to reliably use the 'mediaStreamTrack' property of\n * an AudioTrack or a VideoTrack. Whenever 'localTrack.restart(...)' is called, it\n * will replace the mediaStreamTrack property of the localTrack, but the localTrack\n * object will stay the same. Therefore this hook is needed in order for components\n * to rerender in response to the mediaStreamTrack changing.\n */\nexport default function useMediaStreamTrack(track) {\n  _s();\n\n  const [mediaStreamTrack, setMediaStreamTrack] = useState(track === null || track === void 0 ? void 0 : track.mediaStreamTrack);\n  useEffect(() => {\n    setMediaStreamTrack(track === null || track === void 0 ? void 0 : track.mediaStreamTrack);\n\n    if (track) {\n      const handleStarted = () => setMediaStreamTrack(track.mediaStreamTrack);\n\n      track.on('started', handleStarted);\n      return () => {\n        track.off('started', handleStarted);\n      };\n    }\n\n    return () => {};\n  }, [track]);\n  return mediaStreamTrack;\n}\n\n_s(useMediaStreamTrack, \"WVfDAUbWwuTBkFEAxceVs5+kcBo=\");","map":{"version":3,"sources":["/Users/nikitajethani/Desktop/cs-4530-covey/frontend/src/components/VideoCall/VideoFrontend/hooks/useMediaStreamTrack/useMediaStreamTrack.ts"],"names":["useState","useEffect","useMediaStreamTrack","track","mediaStreamTrack","setMediaStreamTrack","handleStarted","on","off"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,mBAAT,CAA6BC,KAA7B,EAA8D;AAAA;;AAC3E,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CL,QAAQ,CAACG,KAAD,aAACA,KAAD,uBAACA,KAAK,CAAEC,gBAAR,CAAxD;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,mBAAmB,CAACF,KAAD,aAACA,KAAD,uBAACA,KAAK,CAAEC,gBAAR,CAAnB;;AAEA,QAAID,KAAJ,EAAW;AACT,YAAMG,aAAa,GAAG,MAAMD,mBAAmB,CAACF,KAAK,CAACC,gBAAP,CAA/C;;AACAD,MAAAA,KAAK,CAACI,EAAN,CAAS,SAAT,EAAoBD,aAApB;AACA,aAAO,MAAM;AACXH,QAAAA,KAAK,CAACK,GAAN,CAAU,SAAV,EAAqBF,aAArB;AACD,OAFD;AAGD;;AACD,WAAO,MAAM,CAAG,CAAhB;AACD,GAXQ,EAWN,CAACH,KAAD,CAXM,CAAT;AAaA,SAAOC,gBAAP;AACD;;GAjBuBF,mB","sourcesContent":["import { useState, useEffect } from 'react';\nimport { AudioTrack, VideoTrack } from 'twilio-video';\n\n/*\n * This hook allows components to reliably use the 'mediaStreamTrack' property of\n * an AudioTrack or a VideoTrack. Whenever 'localTrack.restart(...)' is called, it\n * will replace the mediaStreamTrack property of the localTrack, but the localTrack\n * object will stay the same. Therefore this hook is needed in order for components\n * to rerender in response to the mediaStreamTrack changing.\n */\nexport default function useMediaStreamTrack(track?: AudioTrack | VideoTrack) {\n  const [mediaStreamTrack, setMediaStreamTrack] = useState(track?.mediaStreamTrack);\n\n  useEffect(() => {\n    setMediaStreamTrack(track?.mediaStreamTrack);\n\n    if (track) {\n      const handleStarted = () => setMediaStreamTrack(track.mediaStreamTrack);\n      track.on('started', handleStarted);\n      return () => {\n        track.off('started', handleStarted);\n      };\n    }\n    return () => { };\n  }, [track]);\n\n  return mediaStreamTrack;\n}\n"]},"metadata":{},"sourceType":"module"}