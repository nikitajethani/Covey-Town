{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/nikitajethani/Desktop/cs 4530/covey.town-master/frontend/src/components/Login/TownSelection.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport assert from \"assert\";\nimport { Box, Button, Checkbox, Flex, FormControl, FormLabel, Heading, Input, Stack, Table, TableCaption, Tbody, Td, Th, Thead, Tr, useToast } from '@chakra-ui/react';\nimport useVideoContext from '../VideoCall/VideoFrontend/hooks/useVideoContext/useVideoContext';\nimport Video from '../../classes/Video/Video';\nimport useCoveyAppState from '../../hooks/useCoveyAppState';\nexport default function TownSelection({\n  doLogin\n}) {\n  _s();\n\n  var _Video$instance;\n\n  const [userName, setUserName] = useState(((_Video$instance = Video.instance()) === null || _Video$instance === void 0 ? void 0 : _Video$instance.userName) || '');\n  const {\n    connect\n  } = useVideoContext();\n  const {\n    apiClient\n  } = useCoveyAppState();\n  const toast = useToast();\n\n  const handleJoin = async () => {\n    try {\n      if (!userName || userName.length === 0) {\n        toast({\n          title: 'Unable to join town',\n          description: 'Please select a username',\n          status: 'error'\n        });\n        return;\n      }\n\n      const initData = await Video.setup(userName, 'demoTownID');\n      const loggedIn = await doLogin(initData);\n\n      if (loggedIn) {\n        assert(initData.providerVideoToken);\n        await connect(initData.providerVideoToken);\n      }\n    } catch (err) {\n      toast({\n        title: 'Unable to connect to Towns Service',\n        description: err.toString(),\n        status: 'error'\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          p: \"4\",\n          borderWidth: \"1px\",\n          borderRadius: \"lg\",\n          children: [/*#__PURE__*/_jsxDEV(Heading, {\n            as: \"h2\",\n            size: \"lg\",\n            children: \"Select a username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              htmlFor: \"name\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              autoFocus: true,\n              name: \"name\",\n              placeholder: \"Your name\",\n              value: userName,\n              onChange: event => setUserName(event.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          borderWidth: \"1px\",\n          borderRadius: \"lg\",\n          children: [/*#__PURE__*/_jsxDEV(Heading, {\n            p: \"4\",\n            as: \"h2\",\n            size: \"lg\",\n            children: \"Create a New Town\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Flex, {\n            p: \"4\",\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              flex: \"1\",\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                  htmlFor: \"townName\",\n                  children: \"New Town Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  name: \"townName\",\n                  placeholder: \"New Town Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                  htmlFor: \"isPublic\",\n                  children: \"Publicly Listed\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n                  id: \"isPublic\",\n                  name: \"isPublic\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                \"data-testid\": \"newTownButton\",\n                children: \"Create\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Heading, {\n          p: \"4\",\n          as: \"h2\",\n          size: \"lg\",\n          children: \"-or-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          borderWidth: \"1px\",\n          borderRadius: \"lg\",\n          children: [/*#__PURE__*/_jsxDEV(Heading, {\n            p: \"4\",\n            as: \"h2\",\n            size: \"lg\",\n            children: \"Join an Existing Town\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            borderWidth: \"1px\",\n            borderRadius: \"lg\",\n            children: /*#__PURE__*/_jsxDEV(Flex, {\n              p: \"4\",\n              children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                  htmlFor: \"townIDToJoin\",\n                  children: \"Town ID\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  name: \"townIDToJoin\",\n                  placeholder: \"ID of town to join, or select from list\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                \"data-testid\": \"joinTownByIDButton\",\n                onClick: handleJoin,\n                children: \"Connect\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Heading, {\n            p: \"4\",\n            as: \"h4\",\n            size: \"md\",\n            children: \"Select a public town to join\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            maxH: \"500px\",\n            overflowY: \"scroll\",\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              children: [/*#__PURE__*/_jsxDEV(TableCaption, {\n                placement: \"bottom\",\n                children: \"Publicly Listed Towns\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Thead, {\n                children: /*#__PURE__*/_jsxDEV(Tr, {\n                  children: [/*#__PURE__*/_jsxDEV(Th, {\n                    children: \"Town Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 114,\n                    columnNumber: 28\n                  }, this), /*#__PURE__*/_jsxDEV(Th, {\n                    children: \"Town ID\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 114,\n                    columnNumber: 46\n                  }, this), /*#__PURE__*/_jsxDEV(Th, {\n                    children: \"Activity\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 114,\n                    columnNumber: 62\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 24\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tbody, {\n                children: /*#__PURE__*/_jsxDEV(Tr, {\n                  children: [/*#__PURE__*/_jsxDEV(Td, {\n                    role: \"cell\",\n                    children: \"DEMO_TOWN_NAME\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 116,\n                    columnNumber: 40\n                  }, this), /*#__PURE__*/_jsxDEV(Td, {\n                    role: \"cell\",\n                    children: [\"Unknown/Unknown \", /*#__PURE__*/_jsxDEV(Button, {\n                      onClick: handleJoin,\n                      children: \"Connect\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 117,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 116,\n                    columnNumber: 75\n                  }, this)]\n                }, 'demoTownID', true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(TownSelection, \"RkikfnwwnLZtE8d/SSCIXS/DZac=\", false, function () {\n  return [useVideoContext, useCoveyAppState, useToast];\n});\n\n_c = TownSelection;\n\nvar _c;\n\n$RefreshReg$(_c, \"TownSelection\");","map":{"version":3,"sources":["/Users/nikitajethani/Desktop/cs 4530/covey.town-master/frontend/src/components/Login/TownSelection.tsx"],"names":["React","useState","assert","Box","Button","Checkbox","Flex","FormControl","FormLabel","Heading","Input","Stack","Table","TableCaption","Tbody","Td","Th","Thead","Tr","useToast","useVideoContext","Video","useCoveyAppState","TownSelection","doLogin","userName","setUserName","instance","connect","apiClient","toast","handleJoin","length","title","description","status","initData","setup","loggedIn","providerVideoToken","err","toString","event","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport assert from \"assert\";\nimport {\n  Box,\n  Button,\n  Checkbox,\n  Flex,\n  FormControl,\n  FormLabel,\n  Heading,\n  Input,\n  Stack,\n  Table,\n  TableCaption,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  Tr,\n  useToast\n} from '@chakra-ui/react';\nimport useVideoContext from '../VideoCall/VideoFrontend/hooks/useVideoContext/useVideoContext';\nimport Video from '../../classes/Video/Video';\nimport { TownJoinResponse, } from '../../classes/TownsServiceClient';\nimport useCoveyAppState from '../../hooks/useCoveyAppState';\n\ninterface TownSelectionProps {\n  doLogin: (initData: TownJoinResponse) => Promise<boolean>\n}\n\nexport default function TownSelection({ doLogin }: TownSelectionProps): JSX.Element {\n  const [userName, setUserName] = useState<string>(Video.instance()?.userName || '');\n  const { connect } = useVideoContext();\n  const { apiClient } = useCoveyAppState();\n  const toast = useToast();\n\n  const handleJoin = async () => {\n    try {\n      if (!userName || userName.length === 0) {\n        toast({\n          title: 'Unable to join town',\n          description: 'Please select a username',\n          status: 'error',\n        });\n        return;\n      }\n      const initData = await Video.setup(userName, 'demoTownID');\n\n      const loggedIn = await doLogin(initData);\n      if (loggedIn) {\n        assert(initData.providerVideoToken);\n        await connect(initData.providerVideoToken);\n      }\n    } catch (err) {\n      toast({\n        title: 'Unable to connect to Towns Service',\n        description: err.toString(),\n        status: 'error'\n      })\n    }\n  };\n\n  return (\n    <>\n      <form>\n        <Stack>\n          <Box p=\"4\" borderWidth=\"1px\" borderRadius=\"lg\">\n            <Heading as=\"h2\" size=\"lg\">Select a username</Heading>\n            <FormControl>\n              <FormLabel htmlFor=\"name\">Name</FormLabel>\n              <Input autoFocus name=\"name\" placeholder=\"Your name\"\n                     value={userName}\n                     onChange={event => setUserName(event.target.value)}\n              />\n            </FormControl>\n          </Box>\n          <Box borderWidth=\"1px\" borderRadius=\"lg\">\n            <Heading p=\"4\" as=\"h2\" size=\"lg\">Create a New Town</Heading>\n            <Flex p=\"4\">\n              <Box flex=\"1\">\n                <FormControl>\n                  <FormLabel htmlFor=\"townName\">New Town Name</FormLabel>\n                  <Input name=\"townName\" placeholder=\"New Town Name\"\n                  />\n                </FormControl>\n              </Box><Box>\n              <FormControl>\n                <FormLabel htmlFor=\"isPublic\">Publicly Listed</FormLabel>\n                <Checkbox id=\"isPublic\" name=\"isPublic\"/>\n              </FormControl>\n            </Box>\n              <Box>\n                <Button data-testid=\"newTownButton\">Create</Button>\n              </Box>\n            </Flex>\n          </Box>\n          <Heading p=\"4\" as=\"h2\" size=\"lg\">-or-</Heading>\n\n          <Box borderWidth=\"1px\" borderRadius=\"lg\">\n            <Heading p=\"4\" as=\"h2\" size=\"lg\">Join an Existing Town</Heading>\n            <Box borderWidth=\"1px\" borderRadius=\"lg\">\n              <Flex p=\"4\"><FormControl>\n                <FormLabel htmlFor=\"townIDToJoin\">Town ID</FormLabel>\n                <Input name=\"townIDToJoin\" placeholder=\"ID of town to join, or select from list\"/>\n              </FormControl>\n                <Button data-testid='joinTownByIDButton' onClick={handleJoin}>Connect</Button>\n              </Flex>\n            </Box>\n\n            <Heading p=\"4\" as=\"h4\" size=\"md\">Select a public town to join</Heading>\n            <Box maxH=\"500px\" overflowY=\"scroll\">\n              <Table>\n                <TableCaption placement=\"bottom\">Publicly Listed Towns</TableCaption>\n                <Thead><Tr><Th>Town Name</Th><Th>Town ID</Th><Th>Activity</Th></Tr></Thead>\n                <Tbody>\n                  <Tr key='demoTownID'><Td role='cell'>DEMO_TOWN_NAME</Td><Td\n                    role='cell'>Unknown/Unknown <Button\n                    onClick={handleJoin}>Connect</Button></Td></Tr>\n                </Tbody>\n              </Table>\n            </Box>\n          </Box>\n        </Stack>\n      </form>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}