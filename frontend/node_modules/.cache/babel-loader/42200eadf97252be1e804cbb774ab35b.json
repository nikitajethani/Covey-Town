{"ast":null,"code":"import React, { useContext } from 'react';\nvar MutexContext = React.createContext([]);\n\nvar createMutex = function (context) {\n  return (\n    /** @class */\n    function () {\n      function Mutex(id) {\n        var _this = this;\n\n        this.run = function (resolveCallback, rejectCallback) {\n          if (!_this.isLocked()) {\n            resolveCallback();\n          } else {\n            if (rejectCallback && typeof rejectCallback === 'function') {\n              rejectCallback();\n            }\n          }\n        };\n\n        this.lock = function () {\n          if (!_this.isLocked()) {\n            context.push(_this.id);\n          }\n        };\n\n        this.unlock = function () {\n          var index = context.indexOf(_this.id);\n\n          if (index > -1) {\n            context.splice(index, 1);\n          }\n        };\n\n        this.isLocked = function () {\n          return context.indexOf(_this.id) > -1;\n        };\n\n        this.id = id;\n      }\n\n      return Mutex;\n    }()\n  );\n};\n\nvar useMutex = function () {\n  var mutexContext = useContext(MutexContext);\n  var MutexRunner = createMutex(mutexContext);\n  return MutexRunner;\n};\n\nexport { useMutex };","map":{"version":3,"sources":["/Users/nikitajethani/Desktop/cs-4530-covey/frontend/node_modules/react-context-mutex/dist/react-context-mutex.es.js"],"names":["React","useContext","MutexContext","createContext","createMutex","context","Mutex","id","_this","run","resolveCallback","rejectCallback","isLocked","lock","push","unlock","index","indexOf","splice","useMutex","mutexContext","MutexRunner"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,IAAIC,YAAY,GAAGF,KAAK,CAACG,aAAN,CAAoB,EAApB,CAAnB;;AAEA,IAAIC,WAAW,GAAG,UAAUC,OAAV,EAAmB;AACjC;AAAO;AAAe,gBAAY;AAC9B,eAASC,KAAT,CAAeC,EAAf,EAAmB;AACf,YAAIC,KAAK,GAAG,IAAZ;;AACA,aAAKC,GAAL,GAAW,UAAUC,eAAV,EAA2BC,cAA3B,EAA2C;AAClD,cAAI,CAACH,KAAK,CAACI,QAAN,EAAL,EAAuB;AACnBF,YAAAA,eAAe;AAClB,WAFD,MAGK;AACD,gBAAIC,cAAc,IAAI,OAAOA,cAAP,KAA0B,UAAhD,EAA4D;AACxDA,cAAAA,cAAc;AACjB;AACJ;AACJ,SATD;;AAUA,aAAKE,IAAL,GAAY,YAAY;AACpB,cAAI,CAACL,KAAK,CAACI,QAAN,EAAL,EAAuB;AACnBP,YAAAA,OAAO,CAACS,IAAR,CAAaN,KAAK,CAACD,EAAnB;AACH;AACJ,SAJD;;AAKA,aAAKQ,MAAL,GAAc,YAAY;AACtB,cAAIC,KAAK,GAAGX,OAAO,CAACY,OAAR,CAAgBT,KAAK,CAACD,EAAtB,CAAZ;;AACA,cAAIS,KAAK,GAAG,CAAC,CAAb,EAAgB;AACZX,YAAAA,OAAO,CAACa,MAAR,CAAeF,KAAf,EAAsB,CAAtB;AACH;AACJ,SALD;;AAMA,aAAKJ,QAAL,GAAgB,YAAY;AACxB,iBAAOP,OAAO,CAACY,OAAR,CAAgBT,KAAK,CAACD,EAAtB,IAA4B,CAAC,CAApC;AACH,SAFD;;AAGA,aAAKA,EAAL,GAAUA,EAAV;AACH;;AACD,aAAOD,KAAP;AACH,KA9BqB;AAAtB;AA+BH,CAhCD;;AAkCA,IAAIa,QAAQ,GAAG,YAAY;AACvB,MAAIC,YAAY,GAAGnB,UAAU,CAACC,YAAD,CAA7B;AACA,MAAImB,WAAW,GAAGjB,WAAW,CAACgB,YAAD,CAA7B;AACA,SAAOC,WAAP;AACH,CAJD;;AAMA,SAASF,QAAT","sourcesContent":["import React, { useContext } from 'react';\n\nvar MutexContext = React.createContext([]);\n\nvar createMutex = function (context) {\r\n    return /** @class */ (function () {\r\n        function Mutex(id) {\r\n            var _this = this;\r\n            this.run = function (resolveCallback, rejectCallback) {\r\n                if (!_this.isLocked()) {\r\n                    resolveCallback();\r\n                }\r\n                else {\r\n                    if (rejectCallback && typeof rejectCallback === 'function') {\r\n                        rejectCallback();\r\n                    }\r\n                }\r\n            };\r\n            this.lock = function () {\r\n                if (!_this.isLocked()) {\r\n                    context.push(_this.id);\r\n                }\r\n            };\r\n            this.unlock = function () {\r\n                var index = context.indexOf(_this.id);\r\n                if (index > -1) {\r\n                    context.splice(index, 1);\r\n                }\r\n            };\r\n            this.isLocked = function () {\r\n                return context.indexOf(_this.id) > -1;\r\n            };\r\n            this.id = id;\r\n        }\r\n        return Mutex;\r\n    }());\r\n};\n\nvar useMutex = function () {\r\n    var mutexContext = useContext(MutexContext);\r\n    var MutexRunner = createMutex(mutexContext);\r\n    return MutexRunner;\r\n};\n\nexport { useMutex };\n"]},"metadata":{},"sourceType":"module"}