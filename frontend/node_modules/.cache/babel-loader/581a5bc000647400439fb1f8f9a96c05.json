{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/nikitajethani/Desktop/cs-4530-covey/frontend/src/App.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useMemo, useReducer, useState } from 'react';\nimport './App.css';\nimport { nanoid } from 'nanoid';\nimport { BrowserRouter } from 'react-router-dom';\nimport { io } from 'socket.io-client';\nimport { ChakraProvider } from '@chakra-ui/react';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport assert from 'assert';\nimport WorldMap from './components/world/WorldMap';\nimport VideoOverlay from './components/VideoCall/VideoOverlay/VideoOverlay';\nimport VideoContext from './contexts/VideoContext';\nimport Login from './components/Login/Login';\nimport CoveyAppContext from './contexts/CoveyAppContext';\nimport NearbyPlayersContext from './contexts/NearbyPlayersContext';\nimport AppStateProvider, { useAppState } from './components/VideoCall/VideoFrontend/state';\nimport useConnectionOptions from './components/VideoCall/VideoFrontend/utils/useConnectionOptions/useConnectionOptions';\nimport UnsupportedBrowserWarning from './components/VideoCall/VideoFrontend/components/UnsupportedBrowserWarning/UnsupportedBrowserWarning';\nimport { VideoProvider } from './components/VideoCall/VideoFrontend/components/VideoProvider';\nimport ErrorDialog from './components/VideoCall/VideoFrontend/components/ErrorDialog/ErrorDialog';\nimport theme from './components/VideoCall/VideoFrontend/theme';\nimport Player from './classes/Player';\nimport TownsServiceClient from './classes/TownsServiceClient';\nimport Video from './classes/Video/Video';\n\nfunction defaultAppState() {\n  return {\n    nearbyPlayers: {\n      nearbyPlayers: []\n    },\n    // my edits\n    // messageHistory: { messageHistory: [] },\n    messageHistory: {\n      messageHistory: []\n    },\n    players: [],\n    myPlayerID: '',\n    currentTownFriendlyName: '',\n    currentTownID: '',\n    currentTownIsPubliclyListed: false,\n    sessionToken: '',\n    userName: '',\n    socket: null,\n    currentLocation: {\n      x: 0,\n      y: 0,\n      rotation: 'front',\n      moving: false\n    },\n    emitMovement: () => {},\n    apiClient: new TownsServiceClient(),\n    roomSockets: []\n  };\n}\n\nfunction appStateReducer(state, update) {\n  var _state$socket;\n\n  const nextState = {\n    sessionToken: state.sessionToken,\n    currentTownFriendlyName: state.currentTownFriendlyName,\n    currentTownID: state.currentTownID,\n    currentTownIsPubliclyListed: state.currentTownIsPubliclyListed,\n    myPlayerID: state.myPlayerID,\n    // my edit\n    messageHistory: state.messageHistory,\n    players: state.players,\n    currentLocation: state.currentLocation,\n    nearbyPlayers: state.nearbyPlayers,\n    userName: state.userName,\n    socket: state.socket,\n    emitMovement: state.emitMovement,\n    apiClient: state.apiClient,\n    roomSockets: state.roomSockets\n  };\n\n  function calculateNearbyPlayers(players, currentLocation) {\n    const isWithinCallRadius = (p, location) => {\n      if (p.location && location) {\n        const dx = p.location.x - location.x;\n        const dy = p.location.y - location.y;\n        const d = Math.sqrt(dx * dx + dy * dy);\n        return d < 80;\n      }\n\n      return false;\n    };\n\n    return {\n      nearbyPlayers: players.filter(p => isWithinCallRadius(p, currentLocation))\n    };\n  }\n\n  function samePlayers(a1, a2) {\n    if (a1.nearbyPlayers.length !== a2.nearbyPlayers.length) return false;\n    const ids1 = a1.nearbyPlayers.map(p => p.id).sort();\n    const ids2 = a2.nearbyPlayers.map(p => p.id).sort();\n    return !ids1.some((val, idx) => val !== ids2[idx]);\n  }\n\n  let updatePlayer;\n\n  switch (update.action) {\n    case 'doConnect':\n      nextState.sessionToken = update.data.sessionToken;\n      nextState.myPlayerID = update.data.myPlayerID;\n      nextState.currentTownFriendlyName = update.data.townFriendlyName;\n      nextState.currentTownID = update.data.townID;\n      nextState.currentTownIsPubliclyListed = update.data.townIsPubliclyListed;\n      nextState.userName = update.data.userName;\n      nextState.emitMovement = update.data.emitMovement;\n      nextState.socket = update.data.socket;\n      nextState.players = update.data.players;\n      break;\n\n    case 'addPlayer':\n      nextState.players = nextState.players.concat([update.player]);\n      break;\n\n    case 'playerMoved':\n      updatePlayer = nextState.players.find(p => p.id === update.player.id);\n\n      if (updatePlayer) {\n        updatePlayer.location = update.player.location;\n      } else {\n        nextState.players = nextState.players.concat([update.player]);\n      }\n\n      nextState.nearbyPlayers = calculateNearbyPlayers(nextState.players, nextState.currentLocation);\n\n      if (samePlayers(nextState.nearbyPlayers, state.nearbyPlayers)) {\n        nextState.nearbyPlayers = state.nearbyPlayers;\n      }\n\n      break;\n\n    case 'weMoved':\n      nextState.currentLocation = update.location;\n      nextState.nearbyPlayers = calculateNearbyPlayers(nextState.players, nextState.currentLocation);\n\n      if (samePlayers(nextState.nearbyPlayers, state.nearbyPlayers)) {\n        nextState.nearbyPlayers = state.nearbyPlayers;\n      }\n\n      break;\n\n    case 'playerDisconnect':\n      nextState.players = nextState.players.filter(player => player.id !== update.player.id);\n      nextState.nearbyPlayers = calculateNearbyPlayers(nextState.players, nextState.currentLocation);\n\n      if (samePlayers(nextState.nearbyPlayers, state.nearbyPlayers)) {\n        nextState.nearbyPlayers = state.nearbyPlayers;\n      }\n\n      break;\n\n    case 'disconnect':\n      (_state$socket = state.socket) === null || _state$socket === void 0 ? void 0 : _state$socket.disconnect();\n      return defaultAppState();\n\n    default:\n      throw new Error('Unexpected state request');\n    // my edits\n\n    case 'sendPublicMessage':\n      console.log('sending public message');\n      nextState.messageHistory.messageHistory.push({\n        id: nanoid(),\n        privacy: 'public',\n        from: 'Me',\n        to: 'Everyone',\n        message: update.message,\n        seen: true\n      });\n      break;\n\n    case 'sendPrivateMessage':\n      nextState.messageHistory.messageHistory.push({\n        id: nanoid(),\n        privacy: 'private',\n        from: 'Me',\n        to: update.toPlayer,\n        message: update.message,\n        seen: true\n      });\n      break;\n  }\n\n  return nextState;\n}\n\nasync function GameController(initData, dispatchAppUpdate) {\n  // Now, set up the game sockets\n  const gamePlayerID = initData.coveyUserID;\n  const sessionToken = initData.coveySessionToken;\n  const url = process.env.REACT_APP_TOWNS_SERVICE_URL;\n  assert(url);\n  const video = Video.instance();\n  assert(video);\n  const roomName = video.townFriendlyName;\n  assert(roomName);\n  const socket = io(url, {\n    auth: {\n      token: sessionToken,\n      coveyTownID: video.coveyTownID\n    }\n  });\n  socket.on('newPlayer', player => {\n    dispatchAppUpdate({\n      action: 'addPlayer',\n      player: Player.fromServerPlayer(player)\n    });\n  });\n  socket.on('playerMoved', player => {\n    if (player._id !== gamePlayerID) {\n      dispatchAppUpdate({\n        action: 'playerMoved',\n        player: Player.fromServerPlayer(player)\n      });\n    }\n  });\n  socket.on('playerDisconnect', player => {\n    dispatchAppUpdate({\n      action: 'playerDisconnect',\n      player: Player.fromServerPlayer(player)\n    });\n  });\n  socket.on('disconnect', () => {\n    dispatchAppUpdate({\n      action: 'disconnect'\n    });\n  });\n\n  const emitMovement = location => {\n    socket.emit('playerMovement', location);\n    dispatchAppUpdate({\n      action: 'weMoved',\n      location\n    });\n  };\n\n  socket.on('publicMessage', msg => {\n    console.log('sending public message1');\n    dispatchAppUpdate({\n      action: 'sendPublicMessage',\n      message: msg\n    });\n  });\n  socket.on('privateMessage', (msg, to) => {\n    console.log('sending private message1');\n    dispatchAppUpdate({\n      action: 'sendPrivateMessage',\n      message: msg,\n      toPlayer: to\n    });\n  });\n  dispatchAppUpdate({\n    action: 'doConnect',\n    data: {\n      sessionToken,\n      userName: video.userName,\n      townFriendlyName: roomName,\n      townID: video.coveyTownID,\n      myPlayerID: gamePlayerID,\n      townIsPubliclyListed: video.isPubliclyListed,\n      emitMovement,\n      socket,\n      players: initData.currentPlayers.map(sp => Player.fromServerPlayer(sp))\n    }\n  });\n  return true;\n}\n\n_c = GameController;\n\nfunction App(props) {\n  _s();\n\n  const [appState, dispatchAppUpdate] = useReducer(appStateReducer, defaultAppState());\n  const setupGameController = useCallback(async initData => {\n    await GameController(initData, dispatchAppUpdate);\n    return true;\n  }, [dispatchAppUpdate]);\n  const videoInstance = Video.instance();\n  const {\n    setOnDisconnect\n  } = props;\n  useEffect(() => {\n    setOnDisconnect(() => async () => {\n      // Here's a great gotcha: https://medium.com/swlh/how-to-store-a-function-with-the-usestate-hook-in-react-8a88dd4eede1\n      dispatchAppUpdate({\n        action: 'disconnect'\n      });\n      return Video.teardown();\n    });\n  }, [dispatchAppUpdate, setOnDisconnect]);\n  const page = useMemo(() => {\n    if (!appState.sessionToken) {\n      return /*#__PURE__*/_jsxDEV(Login, {\n        doLogin: setupGameController\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (!videoInstance) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(WorldMap, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(VideoOverlay, {\n        preferredMode: \"fullwidth\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this);\n  }, [setupGameController, appState.sessionToken, videoInstance]);\n  return /*#__PURE__*/_jsxDEV(CoveyAppContext.Provider, {\n    value: appState,\n    children: /*#__PURE__*/_jsxDEV(VideoContext.Provider, {\n      value: Video.instance(),\n      children: /*#__PURE__*/_jsxDEV(NearbyPlayersContext.Provider, {\n        value: appState.nearbyPlayers,\n        children: page\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 270,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"hlZHenlJOnd4q2CYPlKmw/zwGNA=\");\n\n_c2 = App;\n\nfunction EmbeddedTwilioAppWrapper() {\n  _s2();\n\n  const {\n    error,\n    setError\n  } = useAppState();\n  const [onDisconnect, setOnDisconnect] = useState();\n  const connectionOptions = useConnectionOptions();\n  return /*#__PURE__*/_jsxDEV(UnsupportedBrowserWarning, {\n    children: /*#__PURE__*/_jsxDEV(VideoProvider, {\n      options: connectionOptions,\n      onError: setError,\n      onDisconnect: onDisconnect,\n      children: [/*#__PURE__*/_jsxDEV(ErrorDialog, {\n        dismissError: () => setError(null),\n        error: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(App, {\n        setOnDisconnect: setOnDisconnect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 286,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(EmbeddedTwilioAppWrapper, \"L1gaqrf8YLZNV/J5WP4vEWpalos=\", false, function () {\n  return [useAppState, useConnectionOptions];\n});\n\n_c3 = EmbeddedTwilioAppWrapper;\nexport default function AppStateWrapper() {\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(ChakraProvider, {\n      children: /*#__PURE__*/_jsxDEV(MuiThemeProvider, {\n        theme: theme('rgb(185, 37, 0)'),\n        children: /*#__PURE__*/_jsxDEV(AppStateProvider, {\n          preferredMode: \"fullwidth\",\n          highlightedProfiles: [],\n          children: /*#__PURE__*/_jsxDEV(EmbeddedTwilioAppWrapper, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 297,\n    columnNumber: 5\n  }, this);\n}\n_c4 = AppStateWrapper;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"GameController\");\n$RefreshReg$(_c2, \"App\");\n$RefreshReg$(_c3, \"EmbeddedTwilioAppWrapper\");\n$RefreshReg$(_c4, \"AppStateWrapper\");","map":{"version":3,"sources":["/Users/nikitajethani/Desktop/cs-4530-covey/frontend/src/App.tsx"],"names":["React","useCallback","useEffect","useMemo","useReducer","useState","nanoid","BrowserRouter","io","ChakraProvider","MuiThemeProvider","assert","WorldMap","VideoOverlay","VideoContext","Login","CoveyAppContext","NearbyPlayersContext","AppStateProvider","useAppState","useConnectionOptions","UnsupportedBrowserWarning","VideoProvider","ErrorDialog","theme","Player","TownsServiceClient","Video","defaultAppState","nearbyPlayers","messageHistory","players","myPlayerID","currentTownFriendlyName","currentTownID","currentTownIsPubliclyListed","sessionToken","userName","socket","currentLocation","x","y","rotation","moving","emitMovement","apiClient","roomSockets","appStateReducer","state","update","nextState","calculateNearbyPlayers","isWithinCallRadius","p","location","dx","dy","d","Math","sqrt","filter","samePlayers","a1","a2","length","ids1","map","id","sort","ids2","some","val","idx","updatePlayer","action","data","townFriendlyName","townID","townIsPubliclyListed","concat","player","find","disconnect","Error","console","log","push","privacy","from","to","message","seen","toPlayer","GameController","initData","dispatchAppUpdate","gamePlayerID","coveyUserID","coveySessionToken","url","process","env","REACT_APP_TOWNS_SERVICE_URL","video","instance","roomName","auth","token","coveyTownID","on","fromServerPlayer","_id","emit","msg","isPubliclyListed","currentPlayers","sp","App","props","appState","setupGameController","videoInstance","setOnDisconnect","teardown","page","EmbeddedTwilioAppWrapper","error","setError","onDisconnect","connectionOptions","AppStateWrapper"],"mappings":"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","sourcesContent":["import React, {\n  Dispatch, SetStateAction, useCallback, useEffect, useMemo, useReducer, useState,\n} from 'react';\nimport './App.css';\nimport { nanoid } from 'nanoid';\nimport { BrowserRouter } from 'react-router-dom';\nimport { io, Socket } from 'socket.io-client';\nimport { ChakraProvider } from '@chakra-ui/react';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport assert from 'assert';\nimport WorldMap from './components/world/WorldMap';\nimport VideoOverlay from './components/VideoCall/VideoOverlay/VideoOverlay';\nimport { CoveyAppState, NearbyPlayers, MessageFormat } from './CoveyTypes';\nimport VideoContext from './contexts/VideoContext';\nimport Login from './components/Login/Login';\nimport CoveyAppContext from './contexts/CoveyAppContext';\nimport NearbyPlayersContext from './contexts/NearbyPlayersContext';\nimport AppStateProvider, { useAppState } from './components/VideoCall/VideoFrontend/state';\nimport useConnectionOptions from './components/VideoCall/VideoFrontend/utils/useConnectionOptions/useConnectionOptions';\nimport UnsupportedBrowserWarning\n  from './components/VideoCall/VideoFrontend/components/UnsupportedBrowserWarning/UnsupportedBrowserWarning';\nimport { VideoProvider } from './components/VideoCall/VideoFrontend/components/VideoProvider';\nimport ErrorDialog from './components/VideoCall/VideoFrontend/components/ErrorDialog/ErrorDialog';\nimport theme from './components/VideoCall/VideoFrontend/theme';\nimport { Callback } from './components/VideoCall/VideoFrontend/types';\nimport Player, { ServerPlayer, UserLocation } from './classes/Player';\nimport TownsServiceClient, { TownJoinResponse } from './classes/TownsServiceClient';\nimport Video from './classes/Video/Video';\n\ntype CoveyAppUpdate =\n  | { action: 'doConnect'; data: { userName: string, townFriendlyName: string, townID: string,townIsPubliclyListed:boolean, sessionToken: string, myPlayerID: string, socket: Socket, players: Player[], emitMovement: (location: UserLocation) => void} }\n  | { action: 'addPlayer'; player: Player }\n  | { action: 'playerMoved'; player: Player }\n  | { action: 'playerDisconnect'; player: Player }\n  | { action: 'weMoved'; location: UserLocation }\n  | { action: 'disconnect' }\n  // my edits\n  | {action: 'sendPublicMessage'; message: string}\n  | {action: 'sendPrivateMessage'; message: string; toPlayer: string}\n  ;\n\nfunction defaultAppState(): CoveyAppState {\n  return {\n    nearbyPlayers: { nearbyPlayers: [] },\n    // my edits\n    // messageHistory: { messageHistory: [] },\n    messageHistory: { messageHistory: [] },\n\n    players: [],\n    myPlayerID: '',\n    currentTownFriendlyName: '',\n    currentTownID: '',\n    currentTownIsPubliclyListed: false,\n    sessionToken: '',\n    userName: '',\n    socket: null,\n    currentLocation: {\n      x: 0, y: 0, rotation: 'front', moving: false,\n    },\n    emitMovement: () => {\n    },\n    apiClient: new TownsServiceClient(),\n    roomSockets: [],\n  };\n}\nfunction appStateReducer(state: CoveyAppState, update: CoveyAppUpdate): CoveyAppState {\n  const nextState = {\n    sessionToken: state.sessionToken,\n    currentTownFriendlyName: state.currentTownFriendlyName,\n    currentTownID: state.currentTownID,\n    currentTownIsPubliclyListed: state.currentTownIsPubliclyListed,\n    myPlayerID: state.myPlayerID,\n\n    // my edit\n    messageHistory: state.messageHistory,\n    players: state.players,\n    currentLocation: state.currentLocation,\n    nearbyPlayers: state.nearbyPlayers,\n    userName: state.userName,\n    socket: state.socket,\n    emitMovement: state.emitMovement,\n    apiClient: state.apiClient,\n    roomSockets: state.roomSockets,\n  };\n\n  function calculateNearbyPlayers(players: Player[], currentLocation: UserLocation) {\n    const isWithinCallRadius = (p: Player, location: UserLocation) => {\n      if (p.location && location) {\n        const dx = p.location.x - location.x;\n        const dy = p.location.y - location.y;\n        const d = Math.sqrt(dx * dx + dy * dy);\n        return d < 80;\n      }\n      return false;\n    };\n    return { nearbyPlayers: players.filter((p) => isWithinCallRadius(p, currentLocation)) };\n  }\n\n  function samePlayers(a1: NearbyPlayers, a2: NearbyPlayers) {\n    if (a1.nearbyPlayers.length !== a2.nearbyPlayers.length) return false;\n    const ids1 = a1.nearbyPlayers.map((p) => p.id).sort();\n    const ids2 = a2.nearbyPlayers.map((p) => p.id).sort();\n    return !ids1.some((val, idx) => val !== ids2[idx]);\n  }\n\n  let updatePlayer;\n  switch (update.action) {\n    case 'doConnect':\n      nextState.sessionToken = update.data.sessionToken;\n      nextState.myPlayerID = update.data.myPlayerID;\n      nextState.currentTownFriendlyName = update.data.townFriendlyName;\n      nextState.currentTownID = update.data.townID;\n      nextState.currentTownIsPubliclyListed = update.data.townIsPubliclyListed;\n      nextState.userName = update.data.userName;\n      nextState.emitMovement = update.data.emitMovement;\n      nextState.socket = update.data.socket;\n      nextState.players = update.data.players;\n      \n      break;\n    case 'addPlayer':\n      nextState.players = nextState.players.concat([update.player]);\n      break;\n    case 'playerMoved':\n      updatePlayer = nextState.players.find((p) => p.id === update.player.id);\n      if (updatePlayer) {\n        updatePlayer.location = update.player.location;\n      } else {\n        nextState.players = nextState.players.concat([update.player]);\n      }\n      nextState.nearbyPlayers = calculateNearbyPlayers(nextState.players,\n        nextState.currentLocation);\n      if (samePlayers(nextState.nearbyPlayers, state.nearbyPlayers)) {\n        nextState.nearbyPlayers = state.nearbyPlayers;\n      }\n      break;\n    case 'weMoved':\n      nextState.currentLocation = update.location;\n      nextState.nearbyPlayers = calculateNearbyPlayers(nextState.players,\n        nextState.currentLocation);\n      if (samePlayers(nextState.nearbyPlayers, state.nearbyPlayers)) {\n        nextState.nearbyPlayers = state.nearbyPlayers;\n      }\n\n      break;\n    case 'playerDisconnect':\n      nextState.players = nextState.players.filter((player) => player.id !== update.player.id);\n\n      nextState.nearbyPlayers = calculateNearbyPlayers(nextState.players,\n        nextState.currentLocation);\n      if (samePlayers(nextState.nearbyPlayers, state.nearbyPlayers)) {\n        nextState.nearbyPlayers = state.nearbyPlayers;\n      }\n      break;\n    case 'disconnect':\n      state.socket?.disconnect();\n      return defaultAppState();\n    default:\n      throw new Error('Unexpected state request');\n\n    // my edits\n    case 'sendPublicMessage':\n      console.log('sending public message');\n      nextState.messageHistory.messageHistory.push({id: nanoid(), privacy: 'public', from: 'Me', to: 'Everyone', message: update.message, seen: true});     \n      break;\n\n    case 'sendPrivateMessage': \n      nextState.messageHistory.messageHistory.push({id: nanoid(), privacy: 'private', from: 'Me', to: update.toPlayer, message: update.message, seen: true});\n      break;\n  }\n\n  return nextState;\n}\n\nasync function GameController(initData: TownJoinResponse,\n  dispatchAppUpdate: (update: CoveyAppUpdate) => void) {\n  // Now, set up the game sockets\n  const gamePlayerID = initData.coveyUserID;\n  const sessionToken = initData.coveySessionToken;\n  const url = process.env.REACT_APP_TOWNS_SERVICE_URL;\n  assert(url);\n  const video = Video.instance();\n  assert(video);\n  const roomName = video.townFriendlyName;\n  assert(roomName);\n\n  const socket = io(url, { auth: { token: sessionToken, coveyTownID: video.coveyTownID } });\n  socket.on('newPlayer', (player: ServerPlayer) => {\n    dispatchAppUpdate({\n      action: 'addPlayer',\n      player: Player.fromServerPlayer(player),\n    });\n  });\n  socket.on('playerMoved', (player: ServerPlayer) => {\n    if (player._id !== gamePlayerID) {\n      dispatchAppUpdate({ action: 'playerMoved', player: Player.fromServerPlayer(player) });\n    }\n  });\n  socket.on('playerDisconnect', (player: ServerPlayer) => {\n    dispatchAppUpdate({ action: 'playerDisconnect', player: Player.fromServerPlayer(player) });\n  });\n  socket.on('disconnect', () => {\n    dispatchAppUpdate({ action: 'disconnect' });\n  });\n  const emitMovement = (location: UserLocation) => {\n    socket.emit('playerMovement', location);\n    dispatchAppUpdate({ action: 'weMoved', location });\n  };\n\n  socket.on('publicMessage', (msg: string) => {\n    console.log('sending public message1');\n    dispatchAppUpdate({ action: 'sendPublicMessage', message: msg });\n  });\n\n  socket.on('privateMessage', (msg: string, to: string) => {\n    console.log('sending private message1');\n    dispatchAppUpdate({ action: 'sendPrivateMessage', message: msg, toPlayer: to});\n  });\n\n\n\n  dispatchAppUpdate({\n    action: 'doConnect',\n    data: {\n      sessionToken,\n      userName: video.userName,\n      townFriendlyName: roomName,\n      townID: video.coveyTownID,\n      myPlayerID: gamePlayerID,\n      townIsPubliclyListed: video.isPubliclyListed,\n      emitMovement,\n      socket,\n      players: initData.currentPlayers.map((sp) => Player.fromServerPlayer(sp)),\n    },\n  });\n  return true;\n}\n\nfunction App(props: { setOnDisconnect: Dispatch<SetStateAction<Callback | undefined>> }) {\n  const [appState, dispatchAppUpdate] = useReducer(appStateReducer, defaultAppState());\n\n  const setupGameController = useCallback(async (initData: TownJoinResponse) => {\n    await GameController(initData, dispatchAppUpdate);\n    return true;\n  }, [dispatchAppUpdate]);\n  const videoInstance = Video.instance();\n\n  const { setOnDisconnect } = props;\n  useEffect(() => {\n    setOnDisconnect(() => async () => { // Here's a great gotcha: https://medium.com/swlh/how-to-store-a-function-with-the-usestate-hook-in-react-8a88dd4eede1\n      dispatchAppUpdate({ action: 'disconnect' });\n      return Video.teardown();\n    });\n  }, [dispatchAppUpdate, setOnDisconnect]);\n\n  const page = useMemo(() => {\n    if (!appState.sessionToken) {\n      return <Login doLogin={setupGameController} />;\n    } if (!videoInstance) {\n      return <div>Loading...</div>;\n    }\n    return (\n      <div>\n        <WorldMap />\n        <VideoOverlay preferredMode=\"fullwidth\" />\n      </div>\n    );\n  }, [setupGameController, appState.sessionToken, videoInstance]);\n  return (\n\n    <CoveyAppContext.Provider value={appState}>\n      <VideoContext.Provider value={Video.instance()}>\n        <NearbyPlayersContext.Provider value={appState.nearbyPlayers}>\n          {page}\n        </NearbyPlayersContext.Provider>\n      </VideoContext.Provider>\n    </CoveyAppContext.Provider>\n\n  );\n}\n\nfunction EmbeddedTwilioAppWrapper() {\n  const { error, setError } = useAppState();\n  const [onDisconnect, setOnDisconnect] = useState<Callback | undefined>();\n  const connectionOptions = useConnectionOptions();\n  return (\n    <UnsupportedBrowserWarning>\n      <VideoProvider options={connectionOptions} onError={setError} onDisconnect={onDisconnect}>\n        <ErrorDialog dismissError={() => setError(null)} error={error} />\n        <App setOnDisconnect={setOnDisconnect} />\n      </VideoProvider>\n    </UnsupportedBrowserWarning>\n  );\n}\n\nexport default function AppStateWrapper(): JSX.Element {\n  return (\n    <BrowserRouter>\n      <ChakraProvider>\n        <MuiThemeProvider theme={theme('rgb(185, 37, 0)')}>\n          <AppStateProvider preferredMode=\"fullwidth\" highlightedProfiles={[]}>\n            <EmbeddedTwilioAppWrapper />\n          </AppStateProvider>\n        </MuiThemeProvider>\n      </ChakraProvider>\n    </BrowserRouter>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}