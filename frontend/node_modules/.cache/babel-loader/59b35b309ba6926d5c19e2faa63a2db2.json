{"ast":null,"code":"import { isMobile } from '../../utils';\nexport const initialSettings = {\n  trackSwitchOffMode: undefined,\n  dominantSpeakerPriority: 'standard',\n  bandwidthProfileMode: 'collaboration',\n  maxTracks: isMobile ? '5' : '10',\n  maxAudioBitrate: '16000',\n  renderDimensionLow: 'low',\n  renderDimensionStandard: '960p',\n  renderDimensionHigh: 'wide1080p'\n}; // This inputLabels object is used by ConnectionOptions.tsx. It is used to populate the id, name, and label props\n// of the various input elements. Using a typed object like this (instead of strings) eliminates the possibility\n// of there being a typo.\n\nexport const inputLabels = (() => {\n  const target = {};\n\n  for (const setting in initialSettings) {\n    target[setting] = setting;\n  }\n\n  return target;\n})();\nexport function settingsReducer(state, action) {\n  return { ...state,\n    [action.name]: action.value === 'default' ? undefined : action.value\n  };\n}","map":{"version":3,"sources":["/Users/nikitajethani/Desktop/cs 4530/covey.town-master/frontend/src/components/VideoCall/VideoFrontend/state/settings/settingsReducer.ts"],"names":["isMobile","initialSettings","trackSwitchOffMode","undefined","dominantSpeakerPriority","bandwidthProfileMode","maxTracks","maxAudioBitrate","renderDimensionLow","renderDimensionStandard","renderDimensionHigh","inputLabels","target","setting","settingsReducer","state","action","name","value"],"mappings":"AACA,SAASA,QAAT,QAAyB,aAAzB;AAqBA,OAAO,MAAMC,eAAyB,GAAG;AACvCC,EAAAA,kBAAkB,EAAEC,SADmB;AAEvCC,EAAAA,uBAAuB,EAAE,UAFc;AAGvCC,EAAAA,oBAAoB,EAAE,eAHiB;AAIvCC,EAAAA,SAAS,EAAEN,QAAQ,GAAG,GAAH,GAAS,IAJW;AAKvCO,EAAAA,eAAe,EAAE,OALsB;AAMvCC,EAAAA,kBAAkB,EAAE,KANmB;AAOvCC,EAAAA,uBAAuB,EAAE,MAPc;AAQvCC,EAAAA,mBAAmB,EAAE;AARkB,CAAlC,C,CAWP;AACA;AACA;;AACA,OAAO,MAAMC,WAAW,GAAG,CAAC,MAAM;AAChC,QAAMC,MAAW,GAAG,EAApB;;AACA,OAAK,MAAMC,OAAX,IAAsBZ,eAAtB,EAAuC;AACrCW,IAAAA,MAAM,CAACC,OAAD,CAAN,GAAkBA,OAAlB;AACD;;AACD,SAAOD,MAAP;AACD,CAN0B,GAApB;AAQP,OAAO,SAASE,eAAT,CAAyBC,KAAzB,EAA0CC,MAA1C,EAAkE;AACvE,SAAO,EACL,GAAGD,KADE;AAEL,KAACC,MAAM,CAACC,IAAR,GAAeD,MAAM,CAACE,KAAP,KAAiB,SAAjB,GAA6Bf,SAA7B,GAAyCa,MAAM,CAACE;AAF1D,GAAP;AAID","sourcesContent":["import { Track, VideoBandwidthProfileOptions } from 'twilio-video';\nimport { isMobile } from '../../utils';\nimport { RenderDimensionValue } from './renderDimensions';\n\nexport interface Settings {\n  trackSwitchOffMode: VideoBandwidthProfileOptions['trackSwitchOffMode'];\n  dominantSpeakerPriority?: Track.Priority;\n  bandwidthProfileMode: VideoBandwidthProfileOptions['mode'];\n  maxTracks: string;\n  maxAudioBitrate: string;\n  renderDimensionLow?: RenderDimensionValue;\n  renderDimensionStandard?: RenderDimensionValue;\n  renderDimensionHigh?: RenderDimensionValue;\n}\n\ntype SettingsKeys = keyof Settings;\n\nexport interface SettingsAction {\n  name: SettingsKeys;\n  value: string;\n}\n\nexport const initialSettings: Settings = {\n  trackSwitchOffMode: undefined,\n  dominantSpeakerPriority: 'standard',\n  bandwidthProfileMode: 'collaboration',\n  maxTracks: isMobile ? '5' : '10',\n  maxAudioBitrate: '16000',\n  renderDimensionLow: 'low',\n  renderDimensionStandard: '960p',\n  renderDimensionHigh: 'wide1080p',\n};\n\n// This inputLabels object is used by ConnectionOptions.tsx. It is used to populate the id, name, and label props\n// of the various input elements. Using a typed object like this (instead of strings) eliminates the possibility\n// of there being a typo.\nexport const inputLabels = (() => {\n  const target: any = {};\n  for (const setting in initialSettings) {\n    target[setting] = setting as SettingsKeys;\n  }\n  return target as { [key in SettingsKeys]: string };\n})();\n\nexport function settingsReducer(state: Settings, action: SettingsAction) {\n  return {\n    ...state,\n    [action.name]: action.value === 'default' ? undefined : action.value,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}