{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/nikitajethani/Desktop/cs-4530-covey/frontend/src/components/VideoCall/VideoFrontend/components/MainParticipant/MainParticipant.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport MainParticipantInfo from '../MainParticipantInfo/MainParticipantInfo';\nimport ParticipantTracks from '../ParticipantTracks/ParticipantTracks';\nimport useMainParticipant from '../../hooks/useMainParticipant/useMainParticipant';\nimport useSelectedParticipant from '../VideoProvider/useSelectedParticipant/useSelectedParticipant';\nimport useScreenShareParticipant from '../../hooks/useScreenShareParticipant/useScreenShareParticipant';\nimport useVideoContext from '../../hooks/useVideoContext/useVideoContext';\nexport default function MainParticipant() {\n  _s();\n\n  const mainParticipant = useMainParticipant();\n  const {\n    room: {\n      localParticipant\n    }\n  } = useVideoContext();\n  const [selectedParticipant] = useSelectedParticipant();\n  const screenShareParticipant = useScreenShareParticipant();\n  const videoPriority = (mainParticipant === selectedParticipant || mainParticipant === screenShareParticipant) && mainParticipant !== localParticipant ? 'high' : null;\n  return (\n    /*#__PURE__*/\n\n    /* audio is disabled for this participant component because this participant's audio\n       is already being rendered in the <ParticipantStrip /> component.  */\n    _jsxDEV(MainParticipantInfo, {\n      participant: mainParticipant,\n      children: /*#__PURE__*/_jsxDEV(ParticipantTracks, {\n        participant: mainParticipant,\n        videoOnly: true,\n        enableScreenShare: mainParticipant !== localParticipant,\n        videoPriority: videoPriority,\n        isLocalParticipant: mainParticipant === localParticipant\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(MainParticipant, \"JxKQadFIKwgIoQ4OMNuLKh7JrGg=\", false, function () {\n  return [useMainParticipant, useVideoContext, useSelectedParticipant, useScreenShareParticipant];\n});\n\n_c = MainParticipant;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainParticipant\");","map":{"version":3,"sources":["/Users/nikitajethani/Desktop/cs-4530-covey/frontend/src/components/VideoCall/VideoFrontend/components/MainParticipant/MainParticipant.tsx"],"names":["React","MainParticipantInfo","ParticipantTracks","useMainParticipant","useSelectedParticipant","useScreenShareParticipant","useVideoContext","MainParticipant","mainParticipant","room","localParticipant","selectedParticipant","screenShareParticipant","videoPriority"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,mBAAP,MAAgC,4CAAhC;AACA,OAAOC,iBAAP,MAA8B,wCAA9B;AACA,OAAOC,kBAAP,MAA+B,mDAA/B;AACA,OAAOC,sBAAP,MAAmC,gEAAnC;AACA,OAAOC,yBAAP,MAAsC,iEAAtC;AACA,OAAOC,eAAP,MAA4B,6CAA5B;AAEA,eAAe,SAASC,eAAT,GAA2B;AAAA;;AACxC,QAAMC,eAAe,GAAGL,kBAAkB,EAA1C;AACA,QAAM;AACJM,IAAAA,IAAI,EAAE;AAAEC,MAAAA;AAAF;AADF,MAEFJ,eAAe,EAFnB;AAGA,QAAM,CAACK,mBAAD,IAAwBP,sBAAsB,EAApD;AACA,QAAMQ,sBAAsB,GAAGP,yBAAyB,EAAxD;AAEA,QAAMQ,aAAa,GAAG,CAACL,eAAe,KAAKG,mBAApB,IAA2CH,eAAe,KAAKI,sBAAhE,KACjBJ,eAAe,KAAKE,gBADH,GAElB,MAFkB,GAGlB,IAHJ;AAKA;AAAA;;AACE;AACJ;AACI,YAAC,mBAAD;AAAqB,MAAA,WAAW,EAAEF,eAAlC;AAAA,6BACE,QAAC,iBAAD;AACE,QAAA,WAAW,EAAEA,eADf;AAEE,QAAA,SAAS,MAFX;AAGE,QAAA,iBAAiB,EAAEA,eAAe,KAAKE,gBAHzC;AAIE,QAAA,aAAa,EAAEG,aAJjB;AAKE,QAAA,kBAAkB,EAAEL,eAAe,KAAKE;AAL1C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAHF;AAaD;;GA1BuBH,e;UACEJ,kB,EAGpBG,e,EAC0BF,sB,EACCC,yB;;;KANTE,e","sourcesContent":["import React from 'react';\nimport MainParticipantInfo from '../MainParticipantInfo/MainParticipantInfo';\nimport ParticipantTracks from '../ParticipantTracks/ParticipantTracks';\nimport useMainParticipant from '../../hooks/useMainParticipant/useMainParticipant';\nimport useSelectedParticipant from '../VideoProvider/useSelectedParticipant/useSelectedParticipant';\nimport useScreenShareParticipant from '../../hooks/useScreenShareParticipant/useScreenShareParticipant';\nimport useVideoContext from '../../hooks/useVideoContext/useVideoContext';\n\nexport default function MainParticipant() {\n  const mainParticipant = useMainParticipant();\n  const {\n    room: { localParticipant },\n  } = useVideoContext();\n  const [selectedParticipant] = useSelectedParticipant();\n  const screenShareParticipant = useScreenShareParticipant();\n\n  const videoPriority = (mainParticipant === selectedParticipant || mainParticipant === screenShareParticipant)\n    && mainParticipant !== localParticipant\n    ? 'high'\n    : null;\n\n  return (\n    /* audio is disabled for this participant component because this participant's audio\n       is already being rendered in the <ParticipantStrip /> component.  */\n    <MainParticipantInfo participant={mainParticipant}>\n      <ParticipantTracks\n        participant={mainParticipant}\n        videoOnly\n        enableScreenShare={mainParticipant !== localParticipant}\n        videoPriority={videoPriority}\n        isLocalParticipant={mainParticipant === localParticipant}\n      />\n    </MainParticipantInfo>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}