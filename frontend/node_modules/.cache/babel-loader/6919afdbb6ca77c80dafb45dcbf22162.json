{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { isMobile, removeUndefineds } from '..';\nimport { useAppState } from '../../state';\nexport default function useConnectionOptions() {\n  _s();\n\n  var _connectionOptions$ba;\n\n  const {\n    roomType,\n    settings\n  } = useAppState(); // See: https://media.twiliocdn.com/sdk/js/video/releases/2.0.0/docs/global.html#ConnectOptions\n  // for available connection options.\n\n  const connectionOptions = {\n    // Bandwidth Profile, Dominant Speaker, and Network Quality\n    // features are only available in Small Group or Group Rooms.\n    // Please set \"Room Type\" to \"Group\" or \"Small Group\" in your\n    // Twilio Console: https://www.twilio.com/console/video/configure\n    bandwidthProfile: {\n      video: {\n        mode: 'grid',\n        // settings.bandwidthProfileMode,\n        dominantSpeakerPriority: settings.dominantSpeakerPriority,\n        renderDimensions: {\n          low: {\n            width: 176,\n            height: 144\n          },\n          // getResolution(settings.renderDimensionLow),\n          standard: {\n            width: 320,\n            height: 240\n          },\n          // getResolution(settings.renderDimensionStandard),\n          high: {\n            width: 1280,\n            height: 720\n          } // getResolution(settings.renderDimensionHigh),\n\n        },\n        maxTracks: Number(settings.maxTracks)\n      }\n    },\n    dominantSpeaker: true,\n    networkQuality: {\n      local: 1,\n      remote: 1\n    },\n    // Comment this line if you are playing music.\n    maxAudioBitrate: Number(settings.maxAudioBitrate),\n    // VP8 simulcast enables the media server in a Small Group or Group Room\n    // to adapt your encoded video quality for each RemoteParticipant based on\n    // their individual bandwidth constraints. Simulcast should be disabled if\n    // you are using Peer-to-Peer or 'Go' Rooms.\n    preferredVideoCodecs: [{\n      codec: 'VP8',\n      simulcast: roomType !== 'peer-to-peer' && roomType !== 'go'\n    }]\n  }; // For mobile browsers, limit the maximum incoming video bitrate to 2.5 Mbps.\n\n  if (isMobile && (connectionOptions === null || connectionOptions === void 0 ? void 0 : (_connectionOptions$ba = connectionOptions.bandwidthProfile) === null || _connectionOptions$ba === void 0 ? void 0 : _connectionOptions$ba.video)) {\n    connectionOptions.bandwidthProfile.video.maxSubscriptionBitrate = 2500000;\n  } // Here we remove any 'undefined' values. The twilio-video SDK will only use defaults\n  // when no value is passed for an option. It will throw an error when 'undefined' is passed.\n\n\n  return removeUndefineds(connectionOptions);\n}\n\n_s(useConnectionOptions, \"v+Y4Qv4ewQHAqT+KBtyJQkhovZc=\", false, function () {\n  return [useAppState];\n});","map":{"version":3,"sources":["/Users/nikitajethani/Desktop/cs-4530-covey/frontend/src/components/VideoCall/VideoFrontend/utils/useConnectionOptions/useConnectionOptions.ts"],"names":["isMobile","removeUndefineds","useAppState","useConnectionOptions","roomType","settings","connectionOptions","bandwidthProfile","video","mode","dominantSpeakerPriority","renderDimensions","low","width","height","standard","high","maxTracks","Number","dominantSpeaker","networkQuality","local","remote","maxAudioBitrate","preferredVideoCodecs","codec","simulcast","maxSubscriptionBitrate"],"mappings":";;AACA,SAASA,QAAT,EAAmBC,gBAAnB,QAA2C,IAA3C;AAEA,SAASC,WAAT,QAA4B,aAA5B;AAEA,eAAe,SAASC,oBAAT,GAAgC;AAAA;;AAAA;;AAC7C,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAyBH,WAAW,EAA1C,CAD6C,CAG7C;AACA;;AACA,QAAMI,iBAAiC,GAAG;AACxC;AACA;AACA;AACA;AACAC,IAAAA,gBAAgB,EAAE;AAChBC,MAAAA,KAAK,EAAE;AACLC,QAAAA,IAAI,EAAE,MADD;AACS;AACdC,QAAAA,uBAAuB,EAAEL,QAAQ,CAACK,uBAF7B;AAGLC,QAAAA,gBAAgB,EAAE;AAChBC,UAAAA,GAAG,EAAE;AAAEC,YAAAA,KAAK,EAAE,GAAT;AAAcC,YAAAA,MAAM,EAAE;AAAtB,WADW;AACkB;AAClCC,UAAAA,QAAQ,EAAE;AAAEF,YAAAA,KAAK,EAAE,GAAT;AAAcC,YAAAA,MAAM,EAAE;AAAtB,WAFM;AAEuB;AACvCE,UAAAA,IAAI,EAAE;AAAEH,YAAAA,KAAK,EAAE,IAAT;AAAeC,YAAAA,MAAM,EAAE;AAAvB,WAHU,CAGoB;;AAHpB,SAHb;AAQLG,QAAAA,SAAS,EAAEC,MAAM,CAACb,QAAQ,CAACY,SAAV;AARZ;AADS,KALsB;AAiBxCE,IAAAA,eAAe,EAAE,IAjBuB;AAkBxCC,IAAAA,cAAc,EAAE;AAAEC,MAAAA,KAAK,EAAE,CAAT;AAAYC,MAAAA,MAAM,EAAE;AAApB,KAlBwB;AAoBxC;AACAC,IAAAA,eAAe,EAAEL,MAAM,CAACb,QAAQ,CAACkB,eAAV,CArBiB;AAuBxC;AACA;AACA;AACA;AACAC,IAAAA,oBAAoB,EAAE,CAAC;AAAEC,MAAAA,KAAK,EAAE,KAAT;AAAgBC,MAAAA,SAAS,EAAEtB,QAAQ,KAAK,cAAb,IAA+BA,QAAQ,KAAK;AAAvE,KAAD;AA3BkB,GAA1C,CAL6C,CAmC7C;;AACA,MAAIJ,QAAQ,KAAIM,iBAAJ,aAAIA,iBAAJ,gDAAIA,iBAAiB,CAAEC,gBAAvB,0DAAI,sBAAqCC,KAAzC,CAAZ,EAA4D;AAC1DF,IAAAA,iBAAiB,CAAEC,gBAAnB,CAAqCC,KAArC,CAA4CmB,sBAA5C,GAAqE,OAArE;AACD,GAtC4C,CAwC7C;AACA;;;AACA,SAAO1B,gBAAgB,CAACK,iBAAD,CAAvB;AACD;;GA3CuBH,oB;UACSD,W","sourcesContent":["import { ConnectOptions } from 'twilio-video';\nimport { isMobile, removeUndefineds } from '..';\nimport { getResolution } from '../../state/settings/renderDimensions';\nimport { useAppState } from '../../state';\n\nexport default function useConnectionOptions() {\n  const { roomType, settings } = useAppState();\n\n  // See: https://media.twiliocdn.com/sdk/js/video/releases/2.0.0/docs/global.html#ConnectOptions\n  // for available connection options.\n  const connectionOptions: ConnectOptions = {\n    // Bandwidth Profile, Dominant Speaker, and Network Quality\n    // features are only available in Small Group or Group Rooms.\n    // Please set \"Room Type\" to \"Group\" or \"Small Group\" in your\n    // Twilio Console: https://www.twilio.com/console/video/configure\n    bandwidthProfile: {\n      video: {\n        mode: 'grid', // settings.bandwidthProfileMode,\n        dominantSpeakerPriority: settings.dominantSpeakerPriority,\n        renderDimensions: {\n          low: { width: 176, height: 144 }, // getResolution(settings.renderDimensionLow),\n          standard: { width: 320, height: 240 }, // getResolution(settings.renderDimensionStandard),\n          high: { width: 1280, height: 720 }, // getResolution(settings.renderDimensionHigh),\n        },\n        maxTracks: Number(settings.maxTracks),\n      },\n    },\n    dominantSpeaker: true,\n    networkQuality: { local: 1, remote: 1 },\n\n    // Comment this line if you are playing music.\n    maxAudioBitrate: Number(settings.maxAudioBitrate),\n\n    // VP8 simulcast enables the media server in a Small Group or Group Room\n    // to adapt your encoded video quality for each RemoteParticipant based on\n    // their individual bandwidth constraints. Simulcast should be disabled if\n    // you are using Peer-to-Peer or 'Go' Rooms.\n    preferredVideoCodecs: [{ codec: 'VP8', simulcast: roomType !== 'peer-to-peer' && roomType !== 'go' }],\n  };\n\n  // For mobile browsers, limit the maximum incoming video bitrate to 2.5 Mbps.\n  if (isMobile && connectionOptions?.bandwidthProfile?.video) {\n    connectionOptions!.bandwidthProfile!.video!.maxSubscriptionBitrate = 2500000;\n  }\n\n  // Here we remove any 'undefined' values. The twilio-video SDK will only use defaults\n  // when no value is passed for an option. It will throw an error when 'undefined' is passed.\n  return removeUndefineds(connectionOptions);\n}\n"]},"metadata":{},"sourceType":"module"}