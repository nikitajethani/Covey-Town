{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/nikitajethani/Desktop/cs 4530/covey.town-master/frontend/src/components/VideoCall/VideoFrontend/components/Buttons/ToggleVideoButton/ToggleVideoButton.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useRef } from 'react';\nimport Button from '@material-ui/core/Button';\nimport VideoOffIcon from '../../../icons/VideoOffIcon';\nimport VideoOnIcon from '../../../icons/VideoOnIcon';\nimport { useHasVideoInputDevices } from '../../../hooks/deviceHooks/deviceHooks';\nimport useLocalVideoToggle from '../../../hooks/useLocalVideoToggle/useLocalVideoToggle';\nexport default function ToggleVideoButton(props) {\n  _s();\n\n  // @ts-ignore\n  const {\n    isEnabled: isVideoEnabled,\n    toggleVideoEnabled\n  } = useLocalVideoToggle();\n  const lastClickTimeRef = useRef(0);\n  const hasVideoDevices = useHasVideoInputDevices();\n  const toggleVideo = useCallback(async () => {\n    if (Date.now() - lastClickTimeRef.current > 200) {\n      lastClickTimeRef.current = Date.now();\n\n      try {\n        await toggleVideoEnabled();\n      } catch (e) {\n        if (props.setMediaError) {\n          props.setMediaError(e);\n        }\n      }\n    }\n  }, [props, toggleVideoEnabled]);\n  return /*#__PURE__*/_jsxDEV(Button, {\n    className: props.className,\n    onClick: toggleVideo,\n    disabled: !hasVideoDevices || props.disabled,\n    startIcon: isVideoEnabled ? /*#__PURE__*/_jsxDEV(VideoOnIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 35\n    }, this) : /*#__PURE__*/_jsxDEV(VideoOffIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 53\n    }, this),\n    children: !hasVideoDevices ? 'No video devices' : isVideoEnabled ? 'Stop Video' : 'Start Video'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ToggleVideoButton, \"OvxgMaFYioAf87+ymXHZMpJ3vYM=\", false, function () {\n  return [useLocalVideoToggle, useHasVideoInputDevices];\n});\n\n_c = ToggleVideoButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToggleVideoButton\");","map":{"version":3,"sources":["/Users/nikitajethani/Desktop/cs 4530/covey.town-master/frontend/src/components/VideoCall/VideoFrontend/components/Buttons/ToggleVideoButton/ToggleVideoButton.tsx"],"names":["React","useCallback","useRef","Button","VideoOffIcon","VideoOnIcon","useHasVideoInputDevices","useLocalVideoToggle","ToggleVideoButton","props","isEnabled","isVideoEnabled","toggleVideoEnabled","lastClickTimeRef","hasVideoDevices","toggleVideo","Date","now","current","e","setMediaError","className","disabled"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,MAA7B,QAA2C,OAA3C;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AAEA,SAASC,uBAAT,QAAwC,wCAAxC;AACA,OAAOC,mBAAP,MAAgC,wDAAhC;AAEA,eAAe,SAASC,iBAAT,CAA2BC,KAA3B,EAIZ;AAAA;;AACD;AACA,QAAM;AAAEC,IAAAA,SAAS,EAAEC,cAAb;AAA6BC,IAAAA;AAA7B,MAAoDL,mBAAmB,EAA7E;AACA,QAAMM,gBAAgB,GAAGX,MAAM,CAAC,CAAD,CAA/B;AACA,QAAMY,eAAe,GAAGR,uBAAuB,EAA/C;AAEA,QAAMS,WAAW,GAAGd,WAAW,CAAC,YAAY;AAC1C,QAAIe,IAAI,CAACC,GAAL,KAAaJ,gBAAgB,CAACK,OAA9B,GAAwC,GAA5C,EAAiD;AAC/CL,MAAAA,gBAAgB,CAACK,OAAjB,GAA2BF,IAAI,CAACC,GAAL,EAA3B;;AACA,UAAI;AACF,cAAML,kBAAkB,EAAxB;AACD,OAFD,CAEE,OAAOO,CAAP,EAAU;AACV,YAAIV,KAAK,CAACW,aAAV,EAAyB;AACvBX,UAAAA,KAAK,CAACW,aAAN,CAAoBD,CAApB;AACD;AACF;AACF;AACF,GAX8B,EAW5B,CAACV,KAAD,EAAQG,kBAAR,CAX4B,CAA/B;AAaA,sBACE,QAAC,MAAD;AACE,IAAA,SAAS,EAAEH,KAAK,CAACY,SADnB;AAEE,IAAA,OAAO,EAAEN,WAFX;AAGE,IAAA,QAAQ,EAAE,CAACD,eAAD,IAAoBL,KAAK,CAACa,QAHtC;AAIE,IAAA,SAAS,EAAEX,cAAc,gBAAG,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YAAH,gBAAqB,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YAJhD;AAAA,cAMG,CAACG,eAAD,GAAmB,kBAAnB,GAAwCH,cAAc,GAAG,YAAH,GAAkB;AAN3E;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAjCuBH,iB;UAMoCD,mB,EAElCD,uB;;;KARFE,iB","sourcesContent":["import React, { useCallback, useRef } from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport VideoOffIcon from '../../../icons/VideoOffIcon';\nimport VideoOnIcon from '../../../icons/VideoOnIcon';\n\nimport { useHasVideoInputDevices } from '../../../hooks/deviceHooks/deviceHooks';\nimport useLocalVideoToggle from '../../../hooks/useLocalVideoToggle/useLocalVideoToggle';\n\nexport default function ToggleVideoButton(props: {\n  disabled?: boolean;\n  className?: string;\n  setMediaError?(error: Error): void;\n}) {\n  // @ts-ignore\n  const { isEnabled: isVideoEnabled, toggleVideoEnabled } = useLocalVideoToggle();\n  const lastClickTimeRef = useRef(0);\n  const hasVideoDevices = useHasVideoInputDevices();\n\n  const toggleVideo = useCallback(async () => {\n    if (Date.now() - lastClickTimeRef.current > 200) {\n      lastClickTimeRef.current = Date.now();\n      try {\n        await toggleVideoEnabled();\n      } catch (e) {\n        if (props.setMediaError) {\n          props.setMediaError(e);\n        }\n      }\n    }\n  }, [props, toggleVideoEnabled]);\n\n  return (\n    <Button\n      className={props.className}\n      onClick={toggleVideo}\n      disabled={!hasVideoDevices || props.disabled}\n      startIcon={isVideoEnabled ? <VideoOnIcon /> : <VideoOffIcon />}\n    >\n      {!hasVideoDevices ? 'No video devices' : isVideoEnabled ? 'Stop Video' : 'Start Video'}\n    </Button>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}