{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport useVideoContext from '../useVideoContext/useVideoContext';\nimport useScreenShareParticipant from '../useScreenShareParticipant/useScreenShareParticipant';\nimport useSelectedParticipant from '../../components/VideoProvider/useSelectedParticipant/useSelectedParticipant';\nexport default function useMainParticipant() {\n  _s();\n\n  const [selectedParticipant] = useSelectedParticipant();\n  const screenShareParticipant = useScreenShareParticipant();\n  const {\n    room: {\n      localParticipant\n    }\n  } = useVideoContext();\n  const remoteScreenShareParticipant = screenShareParticipant !== localParticipant ? screenShareParticipant : null; // The participant that is returned is displayed in the main video area. Changing the order of the following\n  // variables will change the how the main speaker is determined.\n\n  return remoteScreenShareParticipant || selectedParticipant || localParticipant;\n}\n\n_s(useMainParticipant, \"o9r6GQ65jhMWYNxN1uBE36lIbBQ=\", false, function () {\n  return [useSelectedParticipant, useScreenShareParticipant, useVideoContext];\n});","map":{"version":3,"sources":["/Users/nikitajethani/Desktop/cs-4530-covey/frontend/src/components/VideoCall/VideoFrontend/hooks/useMainParticipant/useMainParticipant.tsx"],"names":["useVideoContext","useScreenShareParticipant","useSelectedParticipant","useMainParticipant","selectedParticipant","screenShareParticipant","room","localParticipant","remoteScreenShareParticipant"],"mappings":";;AAAA,OAAOA,eAAP,MAA4B,oCAA5B;AACA,OAAOC,yBAAP,MAAsC,wDAAtC;AACA,OAAOC,sBAAP,MAAmC,8EAAnC;AAEA,eAAe,SAASC,kBAAT,GAA8B;AAAA;;AAC3C,QAAM,CAACC,mBAAD,IAAwBF,sBAAsB,EAApD;AACA,QAAMG,sBAAsB,GAAGJ,yBAAyB,EAAxD;AACA,QAAM;AACJK,IAAAA,IAAI,EAAE;AAAEC,MAAAA;AAAF;AADF,MAEFP,eAAe,EAFnB;AAGA,QAAMQ,4BAA4B,GAAGH,sBAAsB,KAAKE,gBAA3B,GAA8CF,sBAA9C,GAAuE,IAA5G,CAN2C,CAQ3C;AACA;;AACA,SAAOG,4BAA4B,IAAIJ,mBAAhC,IAAuDG,gBAA9D;AACD;;GAXuBJ,kB;UACQD,sB,EACCD,yB,EAG3BD,e","sourcesContent":["import useVideoContext from '../useVideoContext/useVideoContext';\nimport useScreenShareParticipant from '../useScreenShareParticipant/useScreenShareParticipant';\nimport useSelectedParticipant from '../../components/VideoProvider/useSelectedParticipant/useSelectedParticipant';\n\nexport default function useMainParticipant() {\n  const [selectedParticipant] = useSelectedParticipant();\n  const screenShareParticipant = useScreenShareParticipant();\n  const {\n    room: { localParticipant },\n  } = useVideoContext();\n  const remoteScreenShareParticipant = screenShareParticipant !== localParticipant ? screenShareParticipant : null;\n\n  // The participant that is returned is displayed in the main video area. Changing the order of the following\n  // variables will change the how the main speaker is determined.\n  return remoteScreenShareParticipant || selectedParticipant || localParticipant;\n}\n"]},"metadata":{},"sourceType":"module"}