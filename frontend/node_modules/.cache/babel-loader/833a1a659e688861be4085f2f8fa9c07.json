{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/nikitajethani/Desktop/cs 4530/covey.town-master/frontend/src/components/VideoCall/VideoFrontend/components/Buttons/ToogleScreenShareButton/ToggleScreenShareButton.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ScreenShareIcon from '../../../icons/ScreenShareIcon';\nimport useScreenShareParticipant from '../../../hooks/useScreenShareParticipant/useScreenShareParticipant';\nimport useVideoContext from '../../../hooks/useVideoContext/useVideoContext';\nexport const SCREEN_SHARE_TEXT = 'Share Screen';\nexport const STOP_SCREEN_SHARE_TEXT = 'Stop Sharing Screen';\nexport const SHARE_IN_PROGRESS_TEXT = 'Cannot share screen when another user is sharing';\nexport const SHARE_NOT_SUPPORTED_TEXT = 'Screen sharing is not supported with this browser';\nconst useStyles = makeStyles(theme => createStyles({\n  button: {\n    margin: theme.spacing(1),\n    '&[disabled]': {\n      color: '#bbb',\n      '& svg *': {\n        fill: '#bbb'\n      }\n    }\n  }\n}));\nexport default function ToggleScreenShareButton(props) {\n  _s();\n\n  const classes = useStyles();\n  const screenShareParticipant = useScreenShareParticipant();\n  const {\n    toggleScreenShare\n  } = useVideoContext();\n  const disableScreenShareButton = Boolean(screenShareParticipant);\n  const isScreenShareSupported = navigator.mediaDevices && navigator.mediaDevices.getDisplayMedia;\n  const isDisabled = props.disabled || disableScreenShareButton || !isScreenShareSupported;\n  let tooltipMessage = '';\n\n  if (disableScreenShareButton) {\n    tooltipMessage = SHARE_IN_PROGRESS_TEXT;\n  }\n\n  if (!isScreenShareSupported) {\n    tooltipMessage = SHARE_NOT_SUPPORTED_TEXT;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Tooltip, {\n    title: tooltipMessage,\n    placement: \"top\",\n    PopperProps: {\n      disablePortal: true\n    },\n    style: {\n      cursor: isDisabled ? 'not-allowed' : 'pointer'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.button,\n        onClick: toggleScreenShare,\n        disabled: isDisabled,\n        startIcon: /*#__PURE__*/_jsxDEV(ScreenShareIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 22\n        }, this),\n        \"data-cy-share-screen\": true,\n        children: SCREEN_SHARE_TEXT\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ToggleScreenShareButton, \"lP2fsCaCY5q/b51nHub1FA9PgiA=\", false, function () {\n  return [useStyles, useScreenShareParticipant, useVideoContext];\n});\n\n_c = ToggleScreenShareButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToggleScreenShareButton\");","map":{"version":3,"sources":["/Users/nikitajethani/Desktop/cs 4530/covey.town-master/frontend/src/components/VideoCall/VideoFrontend/components/Buttons/ToogleScreenShareButton/ToggleScreenShareButton.tsx"],"names":["React","createStyles","makeStyles","Button","Tooltip","ScreenShareIcon","useScreenShareParticipant","useVideoContext","SCREEN_SHARE_TEXT","STOP_SCREEN_SHARE_TEXT","SHARE_IN_PROGRESS_TEXT","SHARE_NOT_SUPPORTED_TEXT","useStyles","theme","button","margin","spacing","color","fill","ToggleScreenShareButton","props","classes","screenShareParticipant","toggleScreenShare","disableScreenShareButton","Boolean","isScreenShareSupported","navigator","mediaDevices","getDisplayMedia","isDisabled","disabled","tooltipMessage","disablePortal","cursor"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,EAAuBC,UAAvB,QAAgD,0BAAhD;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AAEA,OAAOC,yBAAP,MAAsC,oEAAtC;AACA,OAAOC,eAAP,MAA4B,gDAA5B;AAEA,OAAO,MAAMC,iBAAiB,GAAG,cAA1B;AACP,OAAO,MAAMC,sBAAsB,GAAG,qBAA/B;AACP,OAAO,MAAMC,sBAAsB,GAAG,kDAA/B;AACP,OAAO,MAAMC,wBAAwB,GAAG,mDAAjC;AAEP,MAAMC,SAAS,GAAGV,UAAU,CAAEW,KAAD,IAAkBZ,YAAY,CAAC;AAC1Da,EAAAA,MAAM,EAAE;AACNC,IAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADF;AAEN,mBAAe;AACbC,MAAAA,KAAK,EAAE,MADM;AAEb,iBAAW;AACTC,QAAAA,IAAI,EAAE;AADG;AAFE;AAFT;AADkD,CAAD,CAA/B,CAA5B;AAYA,eAAe,SAASC,uBAAT,CAAiCC,KAAjC,EAAgE;AAAA;;AAC7E,QAAMC,OAAO,GAAGT,SAAS,EAAzB;AACA,QAAMU,sBAAsB,GAAGhB,yBAAyB,EAAxD;AACA,QAAM;AAAEiB,IAAAA;AAAF,MAAwBhB,eAAe,EAA7C;AACA,QAAMiB,wBAAwB,GAAGC,OAAO,CAACH,sBAAD,CAAxC;AACA,QAAMI,sBAAsB,GAAGC,SAAS,CAACC,YAAV,IAA0BD,SAAS,CAACC,YAAV,CAAuBC,eAAhF;AACA,QAAMC,UAAU,GAAGV,KAAK,CAACW,QAAN,IAAkBP,wBAAlB,IAA8C,CAACE,sBAAlE;AAEA,MAAIM,cAAc,GAAG,EAArB;;AAEA,MAAIR,wBAAJ,EAA8B;AAC5BQ,IAAAA,cAAc,GAAGtB,sBAAjB;AACD;;AAED,MAAI,CAACgB,sBAAL,EAA6B;AAC3BM,IAAAA,cAAc,GAAGrB,wBAAjB;AACD;;AAED,sBACE,QAAC,OAAD;AACE,IAAA,KAAK,EAAEqB,cADT;AAEE,IAAA,SAAS,EAAC,KAFZ;AAGE,IAAA,WAAW,EAAE;AAAEC,MAAAA,aAAa,EAAE;AAAjB,KAHf;AAIE,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAEJ,UAAU,GAAG,aAAH,GAAmB;AAAvC,KAJT;AAAA,2BAME;AAAA,6BAGE,QAAC,MAAD;AACE,QAAA,SAAS,EAAET,OAAO,CAACP,MADrB;AAEE,QAAA,OAAO,EAAES,iBAFX;AAGE,QAAA,QAAQ,EAAEO,UAHZ;AAIE,QAAA,SAAS,eAAE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,gBAJb;AAKE,oCALF;AAAA,kBAOGtB;AAPH;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GAxCuBW,uB;UACNP,S,EACeN,yB,EACDC,e;;;KAHRY,uB","sourcesContent":["import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\n\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ScreenShareIcon from '../../../icons/ScreenShareIcon';\n\nimport useScreenShareParticipant from '../../../hooks/useScreenShareParticipant/useScreenShareParticipant';\nimport useVideoContext from '../../../hooks/useVideoContext/useVideoContext';\n\nexport const SCREEN_SHARE_TEXT = 'Share Screen';\nexport const STOP_SCREEN_SHARE_TEXT = 'Stop Sharing Screen';\nexport const SHARE_IN_PROGRESS_TEXT = 'Cannot share screen when another user is sharing';\nexport const SHARE_NOT_SUPPORTED_TEXT = 'Screen sharing is not supported with this browser';\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n  button: {\n    margin: theme.spacing(1),\n    '&[disabled]': {\n      color: '#bbb',\n      '& svg *': {\n        fill: '#bbb',\n      },\n    },\n  },\n}));\n\nexport default function ToggleScreenShareButton(props: { disabled?: boolean }) {\n  const classes = useStyles();\n  const screenShareParticipant = useScreenShareParticipant();\n  const { toggleScreenShare } = useVideoContext();\n  const disableScreenShareButton = Boolean(screenShareParticipant);\n  const isScreenShareSupported = navigator.mediaDevices && navigator.mediaDevices.getDisplayMedia;\n  const isDisabled = props.disabled || disableScreenShareButton || !isScreenShareSupported;\n\n  let tooltipMessage = '';\n\n  if (disableScreenShareButton) {\n    tooltipMessage = SHARE_IN_PROGRESS_TEXT;\n  }\n\n  if (!isScreenShareSupported) {\n    tooltipMessage = SHARE_NOT_SUPPORTED_TEXT;\n  }\n\n  return (\n    <Tooltip\n      title={tooltipMessage}\n      placement=\"top\"\n      PopperProps={{ disablePortal: true }}\n      style={{ cursor: isDisabled ? 'not-allowed' : 'pointer' }}\n    >\n      <span>\n        {/* The span element is needed because a disabled button will not emit hover events and we want to display\n          a tooltip when screen sharing is disabled */}\n        <Button\n          className={classes.button}\n          onClick={toggleScreenShare}\n          disabled={isDisabled}\n          startIcon={<ScreenShareIcon />}\n          data-cy-share-screen\n        >\n          {SCREEN_SHARE_TEXT}\n        </Button>\n      </span>\n    </Tooltip>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}