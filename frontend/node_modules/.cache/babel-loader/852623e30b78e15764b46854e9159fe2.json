{"ast":null,"code":"import DebugLogger from '../DebugLogger';\nimport TownsServiceClient from '../TownsServiceClient';\nexport default class Video {\n  constructor(userName, coveyTownID) {\n    this.logger = new DebugLogger('Video');\n    this.initialisePromise = null;\n    this.teardownPromise = null;\n    this.sessionToken = void 0;\n    this.videoToken = null;\n    this._userName = void 0;\n    this.townsServiceClient = new TownsServiceClient();\n    this._coveyTownID = void 0;\n    this._townFriendlyName = void 0;\n    this._isPubliclyListed = void 0;\n\n    this.pauseGame = () => {};\n\n    this.unPauseGame = () => {};\n\n    this._userName = userName;\n    this._coveyTownID = coveyTownID;\n  }\n\n  get isPubliclyListed() {\n    if (this._isPubliclyListed === true) {\n      return true;\n    }\n\n    return false;\n  }\n\n  get townFriendlyName() {\n    return this._townFriendlyName;\n  }\n\n  get userName() {\n    return this._userName;\n  }\n\n  get coveyTownID() {\n    return this._coveyTownID;\n  }\n\n  async setup() {\n    if (!this.initialisePromise) {\n      this.initialisePromise = new Promise((resolve, reject) => {\n        // Request our token to join the town\n        this.townsServiceClient.joinTown({\n          coveyTownID: this._coveyTownID,\n          userName: this._userName\n        }).then(result => {\n          this.sessionToken = result.coveySessionToken;\n          this.videoToken = result.providerVideoToken;\n          this._townFriendlyName = result.friendlyName;\n          this._isPubliclyListed = result.isPubliclyListed;\n          resolve(result);\n        }).catch(err => {\n          reject(err);\n        });\n      });\n    }\n\n    return this.initialisePromise;\n  }\n\n  async teardown() {\n    var _this$teardownPromise;\n\n    if (!this.teardownPromise) {\n      if (this.initialisePromise) {\n        const doTeardown = async () => {\n          this.logger.info('Tearing down video client...');\n          this.logger.info('Tore down video client.');\n          this.initialisePromise = null;\n        };\n\n        this.teardownPromise = this.initialisePromise.then(async () => {\n          await doTeardown();\n        }).catch(async err => {\n          this.logger.warn(\"Ignoring video initialisation error as we're teraing down anyway.\", err);\n          await doTeardown();\n        });\n      } else {\n        return Promise.resolve();\n      }\n    }\n\n    return (_this$teardownPromise = this.teardownPromise) !== null && _this$teardownPromise !== void 0 ? _this$teardownPromise : Promise.resolve();\n  }\n\n  static async setup(username, coveyTownID) {\n    let result = null;\n\n    if (!Video.video) {\n      Video.video = new Video(username, coveyTownID);\n    }\n\n    try {\n      result = await Video.video.setup();\n\n      if (!result) {\n        Video.video = null;\n      }\n    } catch (err) {\n      Video.video = null;\n      throw err;\n    } // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore - JB TODO\n\n\n    if (!window.clowdr) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore - JB TODO\n      window.clowdr = window.clowdr || {};\n    } // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore - JB TODO\n\n\n    window.clowdr.video = Video.video;\n    return result;\n  }\n\n  static async teardown() {\n    try {\n      var _Video$video;\n\n      await ((_Video$video = Video.video) === null || _Video$video === void 0 ? void 0 : _Video$video.teardown());\n    } finally {\n      Video.video = null; // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore - JB TODO\n\n      if (window.clowdr && window.clowdr.video) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore - JB TODO\n        window.clowdr.video = null;\n      }\n    }\n  }\n\n  static instance() {\n    return Video.video;\n  }\n\n}\nVideo.video = null;","map":{"version":3,"sources":["/Users/nikitajethani/Desktop/cs-4530-covey/frontend/src/classes/Video/Video.ts"],"names":["DebugLogger","TownsServiceClient","Video","constructor","userName","coveyTownID","logger","initialisePromise","teardownPromise","sessionToken","videoToken","_userName","townsServiceClient","_coveyTownID","_townFriendlyName","_isPubliclyListed","pauseGame","unPauseGame","isPubliclyListed","townFriendlyName","setup","Promise","resolve","reject","joinTown","then","result","coveySessionToken","providerVideoToken","friendlyName","catch","err","teardown","doTeardown","info","warn","username","video","window","clowdr","instance"],"mappings":"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","sourcesContent":["import DebugLogger from '../DebugLogger';\nimport TownsServiceClient, { TownJoinResponse } from '../TownsServiceClient';\n\nexport default class Video {\n  private static video: Video | null = null;\n\n  private logger: DebugLogger = new DebugLogger('Video');\n\n  private initialisePromise: Promise<TownJoinResponse> | null = null;\n\n  private teardownPromise: Promise<void> | null = null;\n\n  private sessionToken?: string;\n\n  private videoToken: string | null = null;\n\n  private _userName: string;\n\n  private townsServiceClient: TownsServiceClient = new TownsServiceClient();\n\n  private _coveyTownID: string;\n\n  private _townFriendlyName: string | undefined;\n\n  private _isPubliclyListed: boolean | undefined;\n\n  pauseGame: () => void = ()=>{};\n\n  unPauseGame: () => void = ()=>{};\n\n  constructor(userName: string, coveyTownID: string) {\n    this._userName = userName;\n    this._coveyTownID = coveyTownID;\n  }\n\n  get isPubliclyListed(): boolean {\n    if (this._isPubliclyListed === true) {\n      return true;\n    }\n    return false;\n  }\n\n  get townFriendlyName(): string | undefined {\n    return this._townFriendlyName;\n  }\n\n  get userName(): string {\n    return this._userName;\n  }\n\n  get coveyTownID(): string {\n    return this._coveyTownID;\n  }\n\n  private async setup(): Promise<TownJoinResponse> {\n    if (!this.initialisePromise) {\n      this.initialisePromise = new Promise((resolve, reject) => {\n        // Request our token to join the town\n        this.townsServiceClient.joinTown({\n          coveyTownID: this._coveyTownID,\n          userName: this._userName,\n        })\n          .then((result) => {\n            this.sessionToken = result.coveySessionToken;\n            this.videoToken = result.providerVideoToken;\n            this._townFriendlyName = result.friendlyName;\n            this._isPubliclyListed = result.isPubliclyListed;\n            resolve(result);\n          })\n          .catch((err) => {\n            reject(err);\n          });\n      });\n    }\n    return this.initialisePromise;\n  }\n\n  private async teardown(): Promise<void> {\n    if (!this.teardownPromise) {\n      if (this.initialisePromise) {\n        const doTeardown = async () => {\n          this.logger.info('Tearing down video client...');\n          this.logger.info('Tore down video client.');\n          this.initialisePromise = null;\n        };\n\n        this.teardownPromise = this.initialisePromise.then(async () => {\n          await doTeardown();\n        }).catch(async (err) => {\n          this.logger.warn(\"Ignoring video initialisation error as we're teraing down anyway.\", err);\n          await doTeardown();\n        });\n      } else {\n        return Promise.resolve();\n      }\n    }\n\n    return this.teardownPromise ?? Promise.resolve();\n  }\n\n  public static async setup(username: string, coveyTownID: string): Promise<TownJoinResponse> {\n    let result = null;\n\n    if (!Video.video) {\n      Video.video = new Video(username, coveyTownID);\n    }\n\n    try {\n      result = await Video.video.setup();\n      if (!result) {\n        Video.video = null;\n      }\n    } catch (err) {\n      Video.video = null;\n      throw err;\n    }\n\n\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore - JB TODO\n    if (!window.clowdr) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore - JB TODO\n      window.clowdr = window.clowdr || {};\n    }\n\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore - JB TODO\n    window.clowdr.video = Video.video;\n\n    return result;\n  }\n\n  public static async teardown(): Promise<void> {\n    try {\n      await Video.video?.teardown();\n    } finally {\n      Video.video = null;\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore - JB TODO\n      if (window.clowdr && window.clowdr.video) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore - JB TODO\n        window.clowdr.video = null;\n      }\n    }\n  }\n\n  public static instance(): Video | null {\n    return Video.video;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}