{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/nikitajethani/Desktop/cs-4530-covey/frontend/src/components/VideoCall/VideoOverlay/VideoOverlay.tsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable */\nimport React, { useEffect, useRef, useState } from 'react';\nimport { styled } from '@material-ui/core/styles';\nimport { Prompt } from 'react-router-dom';\nimport Room from '../VideoFrontend/components/Room/Room';\nimport MenuBar from '../VideoFrontend/components/MenuBar/MenuBar';\nimport MobileTopMenuBar from '../VideoFrontend/components/MobileTopMenuBar/MobileTopMenuBar';\nimport ReconnectingNotification from '../VideoFrontend/components/ReconnectingNotification/ReconnectingNotification';\nimport useRoomState from '../VideoFrontend/hooks/useRoomState/useRoomState';\nimport useLocalAudioToggle from '../VideoFrontend/hooks/useLocalAudioToggle/useLocalAudioToggle';\nimport useVideoContext from '../VideoFrontend/hooks/useVideoContext/useVideoContext';\nimport useLocalVideoToggle from '../VideoFrontend/hooks/useLocalVideoToggle/useLocalVideoToggle';\nimport './VideoGrid.scss';\nimport MediaErrorSnackbar from '../VideoFrontend/components/PreJoinScreens/MediaErrorSnackbar/MediaErrorSnackbar';\nimport usePresenting from '../VideoFrontend/components/VideoProvider/usePresenting/usePresenting';\nimport useMaybeVideo from '../../../hooks/useMaybeVideo';\nconst Container = styled('div')({\n  display: 'grid',\n  gridTemplateRows: '1fr auto'\n});\nconst Main = styled('main')(({\n  theme: _theme\n}) => ({\n  overflow: 'hidden',\n  position: 'relative',\n  paddingBottom: `${_theme.footerHeight}px`,\n  // Leave some space for the footer\n  [_theme.breakpoints.down('sm')]: {\n    paddingBottom: `${_theme.mobileFooterHeight + _theme.mobileTopBarHeight}px` // Leave some space for the mobile header and footer\n\n  }\n}));\nexport default function VideoGrid(props) {\n  _s();\n\n  const {\n    room\n  } = useVideoContext();\n  const roomState = useRoomState();\n  const coveyController = useMaybeVideo();\n  const {\n    stopAudio\n  } = useLocalAudioToggle();\n  const {\n    stopVideo\n  } = useLocalVideoToggle();\n  const unmountRef = useRef();\n  const unloadRef = useRef();\n  const existingRoomRef = useRef();\n  const [mediaError, setMediaError] = useState();\n  const presenting = usePresenting();\n  let coveyRoom = coveyController === null || coveyController === void 0 ? void 0 : coveyController.coveyTownID;\n  if (!coveyRoom) coveyRoom = 'Disconnected';\n  useEffect(() => {\n    function stop() {\n      try {\n        stopAudio();\n      } catch {}\n\n      try {\n        stopVideo();\n      } catch {}\n\n      try {\n        if (roomState === 'connected' || roomState === 'reconnecting') {\n          room.disconnect();\n        }\n      } catch {}\n    }\n\n    unmountRef.current = () => {\n      stop();\n    };\n\n    unloadRef.current = ev => {\n      ev.preventDefault();\n      stop();\n    };\n  }, [room, roomState, stopAudio, stopVideo]);\n  useEffect(() => () => {\n    if (unmountRef && unmountRef.current) {\n      unmountRef.current();\n    }\n  }, []);\n  useEffect(() => {\n    if (unloadRef && unloadRef.current) {\n      window.addEventListener('beforeunload', unloadRef.current);\n    }\n\n    return () => {\n      if (unloadRef && unloadRef.current) window.removeEventListener('beforeunload', unloadRef.current);\n    };\n  }, []);\n  useEffect(() => {\n    if (existingRoomRef.current && (room.sid !== existingRoomRef.current.sid || coveyRoom !== existingRoomRef.current.sid)) {\n      if (existingRoomRef.current.state === 'connected') {\n        existingRoomRef.current.disconnect();\n      }\n    }\n\n    existingRoomRef.current = room;\n  }, [room.sid, room, coveyRoom]);\n  useEffect(() => {\n    const isPresenting = presenting === 'presenting';\n\n    if (props.onPresentingChanged) {\n      props.onPresentingChanged(isPresenting);\n    }\n  }, [presenting, props]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Prompt, {\n      when: roomState !== 'disconnected',\n      message: \"Are you sure you want to leave the video room?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      style: {\n        height: '100%'\n      },\n      className: \"video-grid\",\n      children: [roomState === 'disconnected' ?\n      /*#__PURE__*/\n      // <PreJoinScreens room={{id: coveyRoom, twilioID: coveyRoom}} setMediaError={setMediaError} />\n      _jsxDEV(\"div\", {\n        children: \"Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Main, {\n        style: {\n          paddingBottom: '90px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(ReconnectingNotification, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MobileTopMenuBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Room, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MenuBar, {\n          setMediaError: setMediaError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MediaErrorSnackbar, {\n        error: mediaError,\n        dismissError: () => setMediaError(undefined)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(VideoGrid, \"8e9WVWrJXlnpwo5RvQu5Ly9NQgI=\", false, function () {\n  return [useVideoContext, useRoomState, useMaybeVideo, useLocalAudioToggle, useLocalVideoToggle, usePresenting];\n});\n\n_c = VideoGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoGrid\");","map":{"version":3,"sources":["/Users/nikitajethani/Desktop/cs-4530-covey/frontend/src/components/VideoCall/VideoOverlay/VideoOverlay.tsx"],"names":["React","useEffect","useRef","useState","styled","Prompt","Room","MenuBar","MobileTopMenuBar","ReconnectingNotification","useRoomState","useLocalAudioToggle","useVideoContext","useLocalVideoToggle","MediaErrorSnackbar","usePresenting","useMaybeVideo","Container","display","gridTemplateRows","Main","theme","_theme","overflow","position","paddingBottom","footerHeight","breakpoints","down","mobileFooterHeight","mobileTopBarHeight","VideoGrid","props","room","roomState","coveyController","stopAudio","stopVideo","unmountRef","unloadRef","existingRoomRef","mediaError","setMediaError","presenting","coveyRoom","coveyTownID","stop","disconnect","current","ev","preventDefault","window","addEventListener","removeEventListener","sid","state","isPresenting","onPresentingChanged","height","undefined"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport React, { useEffect, useRef, useState } from 'react';\nimport { styled, Theme } from '@material-ui/core/styles';\n\nimport { Room as TwilioRoom } from 'twilio-video';\n\nimport { Prompt } from 'react-router-dom';\nimport Room from '../VideoFrontend/components/Room/Room';\nimport MenuBar from '../VideoFrontend/components/MenuBar/MenuBar';\nimport MobileTopMenuBar from '../VideoFrontend/components/MobileTopMenuBar/MobileTopMenuBar';\nimport ReconnectingNotification from '../VideoFrontend/components/ReconnectingNotification/ReconnectingNotification';\nimport useRoomState from '../VideoFrontend/hooks/useRoomState/useRoomState';\nimport useLocalAudioToggle from '../VideoFrontend/hooks/useLocalAudioToggle/useLocalAudioToggle';\nimport useVideoContext from '../VideoFrontend/hooks/useVideoContext/useVideoContext';\nimport useLocalVideoToggle from '../VideoFrontend/hooks/useLocalVideoToggle/useLocalVideoToggle';\nimport './VideoGrid.scss';\nimport MediaErrorSnackbar from '../VideoFrontend/components/PreJoinScreens/MediaErrorSnackbar/MediaErrorSnackbar';\nimport usePresenting from '../VideoFrontend/components/VideoProvider/usePresenting/usePresenting';\nimport useMaybeVideo from '../../../hooks/useMaybeVideo';\n\nconst Container = styled('div')({\n  display: 'grid',\n  gridTemplateRows: '1fr auto',\n});\n\nconst Main = styled('main')(({ theme: _theme }: { theme: Theme }) => ({\n  overflow: 'hidden',\n  position: 'relative',\n  paddingBottom: `${_theme.footerHeight}px`, // Leave some space for the footer\n  [_theme.breakpoints.down('sm')]: {\n    paddingBottom: `${_theme.mobileFooterHeight + _theme.mobileTopBarHeight}px`, // Leave some space for the mobile header and footer\n  },\n}));\n\ninterface Props {\n  highlightedProfiles?: string[];\n  hexColour?: string;\n  preferredMode: 'sidebar' | 'fullwidth';\n  onPresentingChanged?(presenting: boolean): void;\n}\n\nexport default function VideoGrid(props: Props) {\n  const { room } = useVideoContext();\n  const roomState = useRoomState();\n  const coveyController = useMaybeVideo();\n\n  const { stopAudio } = useLocalAudioToggle();\n  const { stopVideo } = useLocalVideoToggle();\n  const unmountRef = useRef<() => void>();\n  const unloadRef = useRef<EventListener>();\n  const existingRoomRef = useRef<TwilioRoom | undefined>();\n  const [mediaError, setMediaError] = useState<Error>();\n  const presenting = usePresenting();\n\n  let coveyRoom = coveyController?.coveyTownID;\n  if (!coveyRoom) coveyRoom = 'Disconnected';\n  useEffect(() => {\n    function stop() {\n      try {\n        stopAudio();\n      } catch {}\n\n      try {\n        stopVideo();\n      } catch {}\n\n      try {\n        if (roomState === 'connected' || roomState === 'reconnecting') {\n          room.disconnect();\n        }\n      } catch {}\n    }\n\n    unmountRef.current = () => {\n      stop();\n    };\n    unloadRef.current = (ev) => {\n      ev.preventDefault();\n      stop();\n    };\n  }, [room, roomState, stopAudio, stopVideo]);\n\n  useEffect(() => () => {\n    if (unmountRef && unmountRef.current) {\n      unmountRef.current();\n    }\n  }, []);\n\n  useEffect(() => {\n    if (unloadRef && unloadRef.current) {\n      window.addEventListener('beforeunload', unloadRef.current);\n    }\n    return () => {\n      if (unloadRef && unloadRef.current) window.removeEventListener('beforeunload', unloadRef.current);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (\n      existingRoomRef.current\n            && (room.sid !== existingRoomRef.current.sid || coveyRoom !== existingRoomRef.current.sid)\n    ) {\n      if (existingRoomRef.current.state === 'connected') {\n        existingRoomRef.current.disconnect();\n      }\n    }\n    existingRoomRef.current = room;\n  }, [room.sid, room, coveyRoom]);\n\n  useEffect(() => {\n    const isPresenting = presenting === 'presenting';\n    if (props.onPresentingChanged) {\n      props.onPresentingChanged(isPresenting);\n    }\n  }, [presenting, props]);\n\n  return (\n    <>\n      <Prompt when={roomState !== 'disconnected'} message=\"Are you sure you want to leave the video room?\" />\n      <Container style={{ height: '100%' }} className=\"video-grid\">\n        {roomState === 'disconnected' ? (\n        // <PreJoinScreens room={{id: coveyRoom, twilioID: coveyRoom}} setMediaError={setMediaError} />\n          <div>Error</div>\n        ) : (\n          <Main style={{ paddingBottom: '90px' }}>\n            <ReconnectingNotification />\n            <MobileTopMenuBar />\n            <Room />\n            <MenuBar setMediaError={setMediaError} />\n          </Main>\n        )}\n        <MediaErrorSnackbar error={mediaError} dismissError={() => setMediaError(undefined)} />\n      </Container>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}