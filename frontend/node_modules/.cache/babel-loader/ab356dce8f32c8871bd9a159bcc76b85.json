{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/nikitajethani/Desktop/cs 4530/covey.town-master/frontend/src/components/VideoCall/VideoFrontend/components/VideoProvider/useSelectedParticipant/useSelectedParticipant.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nexport const selectedParticipantContext = /*#__PURE__*/createContext(null);\nexport default function useSelectedParticipant() {\n  _s();\n\n  const [selectedParticipant, setSelectedParticipant] = useContext(selectedParticipantContext);\n  return [selectedParticipant, setSelectedParticipant];\n}\n\n_s(useSelectedParticipant, \"S6DL9Sp0UfWg2pAqQHBI6RwOP00=\");\n\nexport function SelectedParticipantProvider({\n  room,\n  children\n}) {\n  _s2();\n\n  const [selectedParticipant, _setSelectedParticipant] = useState(null);\n\n  const setSelectedParticipant = participant => _setSelectedParticipant(prevParticipant => prevParticipant === participant ? null : participant);\n\n  useEffect(() => {\n    const onDisconnect = () => _setSelectedParticipant(null);\n\n    room.on('disconnected', onDisconnect);\n    return () => {\n      room.off('disconnected', onDisconnect);\n    };\n  }, [room]);\n  return /*#__PURE__*/_jsxDEV(selectedParticipantContext.Provider, {\n    value: [selectedParticipant, setSelectedParticipant],\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(SelectedParticipantProvider, \"+VwVZBXp0lC1oTNlkFsUW8mHB2Q=\");\n\n_c = SelectedParticipantProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectedParticipantProvider\");","map":{"version":3,"sources":["/Users/nikitajethani/Desktop/cs 4530/covey.town-master/frontend/src/components/VideoCall/VideoFrontend/components/VideoProvider/useSelectedParticipant/useSelectedParticipant.tsx"],"names":["React","createContext","useContext","useState","useEffect","selectedParticipantContext","useSelectedParticipant","selectedParticipant","setSelectedParticipant","SelectedParticipantProvider","room","children","_setSelectedParticipant","participant","prevParticipant","onDisconnect","on","off"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IACEC,aADF,EACiBC,UADjB,EAC6BC,QAD7B,EACuCC,SADvC,QAEO,OAFP;AAOA,OAAO,MAAMC,0BAA0B,gBAAGJ,aAAa,CAAiC,IAAjC,CAAhD;AAEP,eAAe,SAASK,sBAAT,GAAkC;AAAA;;AAC/C,QAAM,CAACC,mBAAD,EAAsBC,sBAAtB,IAAgDN,UAAU,CAACG,0BAAD,CAAhE;AACA,SAAO,CAACE,mBAAD,EAAsBC,sBAAtB,CAAP;AACD;;GAHuBF,sB;;AAUxB,OAAO,SAASG,2BAAT,CAAqC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAArC,EAA2F;AAAA;;AAChG,QAAM,CAACJ,mBAAD,EAAsBK,uBAAtB,IAAiDT,QAAQ,CAAqB,IAArB,CAA/D;;AACA,QAAMK,sBAAsB,GAAIK,WAAD,IAA8BD,uBAAuB,CAAEE,eAAD,IAAsBA,eAAe,KAAKD,WAApB,GAAkC,IAAlC,GAAyCA,WAAhE,CAApF;;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,YAAY,GAAG,MAAMH,uBAAuB,CAAC,IAAD,CAAlD;;AACAF,IAAAA,IAAI,CAACM,EAAL,CAAQ,cAAR,EAAwBD,YAAxB;AACA,WAAO,MAAM;AACXL,MAAAA,IAAI,CAACO,GAAL,CAAS,cAAT,EAAyBF,YAAzB;AACD,KAFD;AAGD,GANQ,EAMN,CAACL,IAAD,CANM,CAAT;AAQA,sBACE,QAAC,0BAAD,CAA4B,QAA5B;AAAqC,IAAA,KAAK,EAAE,CAACH,mBAAD,EAAsBC,sBAAtB,CAA5C;AAAA,cACGG;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;IAjBeF,2B;;KAAAA,2B","sourcesContent":["import React, {\n  createContext, useContext, useState, useEffect,\n} from 'react';\nimport { Participant, Room } from 'twilio-video';\n\ntype selectedParticipantContextType = [Participant | null, (participant: Participant) => void];\n\nexport const selectedParticipantContext = createContext<selectedParticipantContextType>(null!);\n\nexport default function useSelectedParticipant() {\n  const [selectedParticipant, setSelectedParticipant] = useContext(selectedParticipantContext);\n  return [selectedParticipant, setSelectedParticipant] as const;\n}\n\ntype SelectedParticipantProviderProps = {\n  room: Room;\n  children: React.ReactNode;\n};\n\nexport function SelectedParticipantProvider({ room, children }: SelectedParticipantProviderProps) {\n  const [selectedParticipant, _setSelectedParticipant] = useState<Participant | null>(null);\n  const setSelectedParticipant = (participant: Participant) => _setSelectedParticipant((prevParticipant) => (prevParticipant === participant ? null : participant));\n\n  useEffect(() => {\n    const onDisconnect = () => _setSelectedParticipant(null);\n    room.on('disconnected', onDisconnect);\n    return () => {\n      room.off('disconnected', onDisconnect);\n    };\n  }, [room]);\n\n  return (\n    <selectedParticipantContext.Provider value={[selectedParticipant, setSelectedParticipant]}>\n      {children}\n    </selectedParticipantContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}