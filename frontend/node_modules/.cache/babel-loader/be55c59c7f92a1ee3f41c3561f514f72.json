{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/nikitajethani/Desktop/cs-4530-covey/frontend/src/components/VideoCall/VideoFrontend/components/PreJoinScreens/DeviceSelectionScreen/SettingsMenu/SettingsMenu.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport Button from '@material-ui/core/Button';\nimport MenuContainer from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, useMediaQuery } from '@material-ui/core';\nimport ConnectionOptionsDialog from '../../../ConnectionOptionsDialog/ConnectionOptionsDialog';\nimport DeviceSelectionDialog from '../../../DeviceSelectionDialog/DeviceSelectionDialog';\nimport SettingsIcon from '../../../../icons/SettingsIcon';\nimport { useAppState } from '../../../../state';\nconst useStyles = makeStyles(theme => ({\n  settingsButton: {\n    margin: '1.8em 0 0',\n    '&:hover': {\n      color: 'black'\n    }\n  }\n}));\nexport default function SettingsMenu({\n  mobileButtonClass\n}) {\n  _s();\n\n  const classes = useStyles();\n  const {\n    roomType\n  } = useAppState();\n  const isMobile = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const [menuOpen, setMenuOpen] = useState(false);\n  const [deviceSettingsOpen, setDeviceSettingsOpen] = useState(false);\n  const [connectionSettingsOpen, setConnectionSettingsOpen] = useState(false);\n  const anchorRef = useRef(null);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isMobile ? /*#__PURE__*/_jsxDEV(Button, {\n      ref: anchorRef,\n      onClick: () => setMenuOpen(true),\n      startIcon: /*#__PURE__*/_jsxDEV(MoreIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 22\n      }, this),\n      className: mobileButtonClass,\n      children: \"More\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Button, {\n      ref: anchorRef,\n      onClick: () => setMenuOpen(true),\n      startIcon: /*#__PURE__*/_jsxDEV(SettingsIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 22\n      }, this),\n      className: classes.settingsButton,\n      children: \"Settings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MenuContainer, {\n      open: menuOpen,\n      onClose: () => setMenuOpen(isOpen => !isOpen),\n      anchorEl: anchorRef.current,\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: isMobile ? 'left' : 'right'\n      },\n      transformOrigin: {\n        vertical: isMobile ? -55 : -45,\n        horizontal: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: () => setDeviceSettingsOpen(true),\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: \"Audio and Video Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), roomType !== 'peer-to-peer' && roomType !== 'go' && /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: () => setConnectionSettingsOpen(true),\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: \"Connection Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DeviceSelectionDialog, {\n      open: deviceSettingsOpen,\n      onClose: () => {\n        setDeviceSettingsOpen(false);\n        setMenuOpen(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ConnectionOptionsDialog, {\n      open: connectionSettingsOpen,\n      onClose: () => {\n        setConnectionSettingsOpen(false);\n        setMenuOpen(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(SettingsMenu, \"jVoX60IeIOU039o15Z0OYOBE9hg=\", false, function () {\n  return [useStyles, useAppState, useMediaQuery];\n});\n\n_c = SettingsMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"SettingsMenu\");","map":{"version":3,"sources":["/Users/nikitajethani/Desktop/cs-4530-covey/frontend/src/components/VideoCall/VideoFrontend/components/PreJoinScreens/DeviceSelectionScreen/SettingsMenu/SettingsMenu.tsx"],"names":["React","useState","useRef","Button","MenuContainer","MenuItem","MoreIcon","Typography","makeStyles","useMediaQuery","ConnectionOptionsDialog","DeviceSelectionDialog","SettingsIcon","useAppState","useStyles","theme","settingsButton","margin","color","SettingsMenu","mobileButtonClass","classes","roomType","isMobile","breakpoints","down","menuOpen","setMenuOpen","deviceSettingsOpen","setDeviceSettingsOpen","connectionSettingsOpen","setConnectionSettingsOpen","anchorRef","isOpen","current","vertical","horizontal"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\nimport Button from '@material-ui/core/Button';\nimport MenuContainer from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, Theme, useMediaQuery } from '@material-ui/core';\n\nimport ConnectionOptionsDialog from '../../../ConnectionOptionsDialog/ConnectionOptionsDialog';\nimport DeviceSelectionDialog from '../../../DeviceSelectionDialog/DeviceSelectionDialog';\nimport SettingsIcon from '../../../../icons/SettingsIcon';\nimport { useAppState } from '../../../../state';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  settingsButton: {\n    margin: '1.8em 0 0',\n    '&:hover': {\n      color: 'black',\n    },\n  },\n}));\n\nexport default function SettingsMenu({ mobileButtonClass }: { mobileButtonClass?: string }) {\n  const classes = useStyles();\n  const { roomType } = useAppState();\n  const isMobile = useMediaQuery((theme: Theme) => theme.breakpoints.down('sm'));\n  const [menuOpen, setMenuOpen] = useState(false);\n  const [deviceSettingsOpen, setDeviceSettingsOpen] = useState(false);\n  const [connectionSettingsOpen, setConnectionSettingsOpen] = useState(false);\n\n  const anchorRef = useRef<HTMLButtonElement>(null);\n\n  return (\n    <>\n      {isMobile ? (\n        <Button\n          ref={anchorRef}\n          onClick={() => setMenuOpen(true)}\n          startIcon={<MoreIcon />}\n          className={mobileButtonClass}\n        >\n          More\n        </Button>\n      ) : (\n        <Button\n          ref={anchorRef}\n          onClick={() => setMenuOpen(true)}\n          startIcon={<SettingsIcon />}\n          className={classes.settingsButton}\n        >\n          Settings\n        </Button>\n      )}\n      <MenuContainer\n        open={menuOpen}\n        onClose={() => setMenuOpen((isOpen) => !isOpen)}\n        anchorEl={anchorRef.current}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: isMobile ? 'left' : 'right',\n        }}\n        transformOrigin={{\n          vertical: isMobile ? -55 : -45,\n          horizontal: 'center',\n        }}\n      >\n        <MenuItem onClick={() => setDeviceSettingsOpen(true)}>\n          <Typography variant=\"body1\">Audio and Video Settings</Typography>\n        </MenuItem>\n        {roomType !== 'peer-to-peer' && roomType !== 'go' && (\n        <MenuItem onClick={() => setConnectionSettingsOpen(true)}>\n          <Typography variant=\"body1\">Connection Settings</Typography>\n        </MenuItem>\n        )}\n      </MenuContainer>\n      <DeviceSelectionDialog\n        open={deviceSettingsOpen}\n        onClose={() => {\n          setDeviceSettingsOpen(false);\n          setMenuOpen(false);\n        }}\n      />\n      <ConnectionOptionsDialog\n        open={connectionSettingsOpen}\n        onClose={() => {\n          setConnectionSettingsOpen(false);\n          setMenuOpen(false);\n        }}\n      />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}