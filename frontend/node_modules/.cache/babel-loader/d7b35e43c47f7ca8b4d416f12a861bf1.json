{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/nikitajethani/Desktop/cs-4530-covey/frontend/src/components/Chat/Chat.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Button, FormControl, Input, Drawer, DrawerBody, DrawerFooter, DrawerHeader, DrawerContent, DrawerCloseButton, Select, useDisclosure, Text, Grid, HStack } from '@chakra-ui/react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Typography from '@material-ui/core/Typography';\nimport useCoveyAppState from '../../hooks/useCoveyAppState';\nimport './Chat.css';\n\nconst Chat = () => {\n  _s();\n\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  const {\n    socket,\n    messageHistory,\n    players,\n    userName,\n    unseenMessages\n  } = useCoveyAppState();\n  const [message, setMessage] = useState('');\n  const [currentPlayers, setCurrentPlayers] = useState([]);\n  const [receiver, setReceiver] = useState('');\n  const openChat = useCallback(() => {\n    onOpen();\n    socket === null || socket === void 0 ? void 0 : socket.emit('looking at messages');\n  }, [onOpen, socket]);\n  const closeChat = useCallback(() => {\n    onClose();\n    socket === null || socket === void 0 ? void 0 : socket.emit('looking at messages');\n  }, [onClose, socket]);\n  const updatePlayers = useCallback(() => {\n    const playersFilter = players.filter(player => player.userName !== userName);\n    setCurrentPlayers(playersFilter.sort((a, b) => a.userName < b.userName ? -1 : 1));\n  }, [players, userName]);\n  useEffect(() => {\n    updatePlayers(); // updateUnseen();\n\n    const timer = setInterval(updatePlayers, 2000); // const timer3 = setInterval(updateUnseen, 2000);\n    // const timer2 = setInterval(updateMessageHistory, 2000);\n\n    return () => {\n      clearInterval(timer); // clearInterval(timer2);\n      // clearInterval(timer3);\n    };\n  }, [updatePlayers]);\n\n  const processUpdates = async () => {\n    if (receiver === '') {\n      socket === null || socket === void 0 ? void 0 : socket.emit('sendPublicMessage', message, userName);\n    } else {\n      socket === null || socket === void 0 ? void 0 : socket.emit('sendPrivateMessage', message, receiver, userName);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n      \"data-testid\": \"openMenuButton\",\n      onClick: openChat,\n      style: unseenMessages !== 0 ? {\n        outline: '1px solid red'\n      } : {\n        color: 'black'\n      },\n      children: /*#__PURE__*/_jsxDEV(HStack, {\n        spacing: \"5px\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: \"Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          style: unseenMessages !== 0 ? {\n            color: 'red'\n          } : {\n            color: 'white',\n            opacity: 0.0\n          },\n          children: [\" \", unseenMessages, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      isOpen: isOpen,\n      onClose: closeChat,\n      size: \"sm\",\n      blockScrollOnMount: false,\n      children: /*#__PURE__*/_jsxDEV(DrawerContent, {\n        children: [/*#__PURE__*/_jsxDEV(DrawerHeader, {\n          style: {\n            color: \"white\",\n            backgroundColor: '#526575'\n          },\n          children: \"Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(DrawerCloseButton, {\n          style: {\n            color: \"white\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(DrawerBody, {\n          pb: 6,\n          children: messageHistory === null || messageHistory === void 0 ? void 0 : messageHistory.messageHistory.map(msg => /*#__PURE__*/_jsxDEV(Text, {\n            style: msg.privacy === 'private' ? {\n              color: 'red'\n            } : {\n              color: 'black'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'inline'\n              },\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n                children: msg.from\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 51\n              }, this), \" to \", /*#__PURE__*/_jsxDEV(\"b\", {\n                children: msg.to\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 72\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                color: 'gray',\n                fontSize: '14px',\n                textAlign: 'right',\n                display: 'inline'\n              },\n              children: [\" \", msg.time]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\" \", msg.message]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this)]\n          }, msg.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DrawerFooter, {\n          justifyContent: \"flex-start\",\n          display: \"inline-flex\",\n          style: {\n            color: 'white',\n            backgroundColor: '#526575'\n          },\n          children: /*#__PURE__*/_jsxDEV(HStack, {\n            spacing: \"15px\",\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              children: \"To:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                style: {\n                  color: 'white'\n                },\n                className: \"select-users\",\n                id: \"userName\",\n                placeholder: \"Everyone\",\n                name: \"receiver\",\n                mr: 4,\n                value: receiver,\n                onChange: ev => setReceiver(ev.target.value),\n                children: currentPlayers === null || currentPlayers === void 0 ? void 0 : currentPlayers.map(player => /*#__PURE__*/_jsxDEV(\"option\", {\n                  children: [\" \", player.userName]\n                }, player.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 16\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DrawerFooter, {\n          justifyContent: \"flex-start\",\n          display: \"inline-flex\",\n          style: {\n            color: 'white',\n            backgroundColor: '#526575'\n          },\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            templateColumns: \"repeat(2, 1fr)\",\n            gap: 2,\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                w: \"320px\",\n                id: \"message\",\n                placeholder: \"Message...\",\n                name: \"message\",\n                value: message,\n                onChange: ev => setMessage(ev.target.value),\n                mr: 4\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                color: '#526575',\n                backgroundColor: 'white'\n              },\n              w: \"70px\",\n              \"data-testid\": \"sendbutton\",\n              colorScheme: \"blue\",\n              mr: 3,\n              value: \"send\",\n              name: \"action1\",\n              onClick: () => processUpdates(),\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Chat, \"kyEFKBHsYjLM86XnSR+BIMni6ss=\", false, function () {\n  return [useDisclosure, useCoveyAppState];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/nikitajethani/Desktop/cs-4530-covey/frontend/src/components/Chat/Chat.tsx"],"names":["React","useCallback","useEffect","useState","Button","FormControl","Input","Drawer","DrawerBody","DrawerFooter","DrawerHeader","DrawerContent","DrawerCloseButton","Select","useDisclosure","Text","Grid","HStack","MenuItem","Typography","useCoveyAppState","Chat","isOpen","onOpen","onClose","socket","messageHistory","players","userName","unseenMessages","message","setMessage","currentPlayers","setCurrentPlayers","receiver","setReceiver","openChat","emit","closeChat","updatePlayers","playersFilter","filter","player","sort","a","b","timer","setInterval","clearInterval","processUpdates","outline","color","opacity","backgroundColor","map","msg","privacy","display","from","to","fontSize","textAlign","time","id","ev","target","value"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\nimport {\n  Button,\n  Flex,\n  FormControl,\n  Input,\n  Drawer,\n  DrawerBody,\n  DrawerFooter,\n  DrawerHeader,\n  DrawerContent,\n  DrawerCloseButton,\n  Select,\n  useDisclosure,\n  Text,\n  flexbox,\n  Grid,\n  HStack,\n  background,\n} from '@chakra-ui/react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Typography from '@material-ui/core/Typography';\nimport useCoveyAppState from '../../hooks/useCoveyAppState';\nimport Player from '../../classes/Player';\nimport './Chat.css';\n\nconst Chat: React.FunctionComponent = () => {\n  const {isOpen, onOpen, onClose} = useDisclosure()\n  const {socket, messageHistory, players, userName, unseenMessages} = useCoveyAppState();\n  const [message, setMessage] = useState<string>('');\n  const [currentPlayers, setCurrentPlayers] = useState<Player[]>([]);\n  const [receiver, setReceiver] = useState<string>('');\n\n  const openChat = useCallback(()=>{\n    onOpen();\n    socket?.emit('looking at messages');\n  }, [onOpen, socket]);\n\n  const closeChat = useCallback(()=>{\n    onClose();\n    socket?.emit('looking at messages');\n  }, [onClose, socket]);\n\n\n  const updatePlayers = useCallback(() => {\n    const playersFilter = players.filter((player) => player.userName !== userName);\n    setCurrentPlayers(playersFilter.sort((a,b) => a.userName < b.userName ? -1:1));\n  }, [players, userName]);\n\n\n  useEffect(() => {\n    updatePlayers();\n    // updateUnseen();\n    const timer = setInterval(updatePlayers, 2000);\n    // const timer3 = setInterval(updateUnseen, 2000);\n    // const timer2 = setInterval(updateMessageHistory, 2000);\n\n    return () => {\n      clearInterval(timer);\n      // clearInterval(timer2);\n      // clearInterval(timer3);\n    };\n  }, [updatePlayers]);\n  \n  const processUpdates = async () =>{\n    if (receiver === '') {\n      socket?.emit('sendPublicMessage', message, userName);\n    } else {\n      socket?.emit('sendPrivateMessage', message, receiver, userName)\n    } \n  };\n\n  return <>\n    <MenuItem data-testid='openMenuButton' onClick={openChat} style={unseenMessages !== 0 ? { outline: '1px solid red' }:{ color: 'black'}}>\n    <HStack spacing=\"5px\">\n      <Typography variant=\"body1\">Chat</Typography>\n      <Text style={unseenMessages !== 0 ? { color: 'red'}:{ color: 'white', opacity: 0.0}}> {unseenMessages} </Text>\n      </HStack>\n    </MenuItem>\n\n    <Drawer isOpen={isOpen} onClose={closeChat} size=\"sm\" blockScrollOnMount={false}>\n      \n      <DrawerContent>\n        <DrawerHeader style={{ color: \"white\", backgroundColor: '#526575'}}>Chat</DrawerHeader>\n        <DrawerCloseButton style={{ color: \"white\"}} />\n          <DrawerBody pb={6}>          \n            {messageHistory?.messageHistory.map((msg) => ( \n              <Text style={msg.privacy === 'private' ? { color: 'red' }:{ color: 'black'}} key={msg.id}>\n                <div style={{display: 'inline'}}> <b>{msg.from}</b> to <b>{msg.to}</b></div> \n                <div style = {{color: 'gray', fontSize: '14px', textAlign: 'right',display: 'inline' }}> {msg.time}</div>\n              <div> {msg.message}</div>\n              </Text>\n            ))} \n          </DrawerBody>\n          <DrawerFooter justifyContent= \"flex-start\" display= \"inline-flex\" style={{ color: 'white', backgroundColor: '#526575'}}>\n          <HStack spacing=\"15px\">\n          <Text>\n          To:\n          </Text>\n              <FormControl>\n              <Select style={{ color: 'white'}} className=\"select-users\" id='userName' placeholder=\"Everyone\" name=\"receiver\" mr={4} value={receiver} onChange={(ev)=>setReceiver(ev.target.value)}>\n             {currentPlayers?.map((player) => ( \n               <option key={player.id}> {player.userName}  \n              </option>))}\n              </Select>\n              </FormControl>\n            </HStack>\n          </DrawerFooter>\n          <DrawerFooter justifyContent= \"flex-start\" display= \"inline-flex\" style={{ color: 'white', backgroundColor: '#526575'}}>\n          <Grid templateColumns=\"repeat(2, 1fr)\" gap={2}>\n            <FormControl>\n              <Input w=\"320px\" id='message' placeholder=\"Message...\" name=\"message\" value={message} onChange={(ev)=>setMessage(ev.target.value)} mr={4}/>\n            </FormControl>\n            <Button style={{ color: '#526575', backgroundColor: 'white'}} w=\"70px\"data-testid='sendbutton' colorScheme=\"blue\" mr={3} value=\"send\" name='action1' onClick={()=>processUpdates()}>\n              Send\n            </Button>\n            </Grid>\n          </DrawerFooter>\n      </DrawerContent>\n      \n    </Drawer>\n  </>\n\n}\n\nexport default Chat;\n\n"]},"metadata":{},"sourceType":"module"}