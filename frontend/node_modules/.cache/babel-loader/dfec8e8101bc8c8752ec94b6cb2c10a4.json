{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/nikitajethani/Desktop/cs 4530/covey.town-master/frontend/src/components/VideoCall/VideoFrontend/components/MenuBar/Menu/Menu.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Typography from '@material-ui/core/Typography';\nimport { useMediaQuery } from '@material-ui/core';\nimport DeviceSelectionDialog from '../../DeviceSelectionDialog/DeviceSelectionDialog';\nexport default function Menu(props) {\n  _s();\n\n  const isMobile = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const [menuOpen, setMenuOpen] = useState(false);\n  const [settingsOpen, setSettingsOpen] = useState(false);\n  const anchorRef = useRef(null);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n      onClick: () => setSettingsOpen(true),\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        children: \"A/V Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DeviceSelectionDialog, {\n      open: settingsOpen,\n      onClose: () => {\n        setSettingsOpen(false);\n        setMenuOpen(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Menu, \"DOeDjiLrnBTSxYt+sdskTzaSnOw=\", false, function () {\n  return [useMediaQuery];\n});\n\n_c = Menu;\n\nvar _c;\n\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"sources":["/Users/nikitajethani/Desktop/cs 4530/covey.town-master/frontend/src/components/VideoCall/VideoFrontend/components/MenuBar/Menu/Menu.tsx"],"names":["React","useState","useRef","MenuItem","Typography","useMediaQuery","DeviceSelectionDialog","Menu","props","isMobile","theme","breakpoints","down","menuOpen","setMenuOpen","settingsOpen","setSettingsOpen","anchorRef"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AAIA,OAAOC,QAAP,MAAqB,4BAArB;AAEA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAAgBC,aAAhB,QAAqC,mBAArC;AACA,OAAOC,qBAAP,MAAkC,mDAAlC;AAGA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAmD;AAAA;;AAChE,QAAMC,QAAQ,GAAGJ,aAAa,CAAEK,KAAD,IAAkBA,KAAK,CAACC,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAnB,CAA9B;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACc,YAAD,EAAeC,eAAf,IAAkCf,QAAQ,CAAC,KAAD,CAAhD;AAEA,QAAMgB,SAAS,GAAGf,MAAM,CAAoB,IAApB,CAAxB;AAEA,sBACE;AAAA,4BACI,QAAC,QAAD;AAAU,MAAA,OAAO,EAAE,MAAMc,eAAe,CAAC,IAAD,CAAxC;AAAA,6BACE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADJ,eAIE,QAAC,qBAAD;AACE,MAAA,IAAI,EAAED,YADR;AAEE,MAAA,OAAO,EAAE,MAAM;AACbC,QAAAA,eAAe,CAAC,KAAD,CAAf;AACAF,QAAAA,WAAW,CAAC,KAAD,CAAX;AACD;AALH;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AAcD;;GArBuBP,I;UACLF,a;;;KADKE,I","sourcesContent":["import React, { useState, useRef } from 'react';\nimport Button from '@material-ui/core/Button';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MenuContainer from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport Typography from '@material-ui/core/Typography';\nimport { Theme, useMediaQuery } from '@material-ui/core';\nimport DeviceSelectionDialog from '../../DeviceSelectionDialog/DeviceSelectionDialog';\nimport TownSettings from '../../../../../Login/TownSettings';\n\nexport default function Menu(props: { buttonClassName?: string }) {\n  const isMobile = useMediaQuery((theme: Theme) => theme.breakpoints.down('sm'));\n  const [menuOpen, setMenuOpen] = useState(false);\n  const [settingsOpen, setSettingsOpen] = useState(false);\n\n  const anchorRef = useRef<HTMLButtonElement>(null);\n\n  return (\n    <>\n        <MenuItem onClick={() => setSettingsOpen(true)}>\n          <Typography variant=\"body1\">A/V Settings</Typography>\n        </MenuItem>\n      <DeviceSelectionDialog\n        open={settingsOpen}\n        onClose={() => {\n          setSettingsOpen(false);\n          setMenuOpen(false);\n        }}\n      />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}